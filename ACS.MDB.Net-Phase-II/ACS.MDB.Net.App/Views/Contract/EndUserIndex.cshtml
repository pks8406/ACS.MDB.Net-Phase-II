@model ACS.MDB.Net.App.Models.EndUser

@{
    ViewBag.Title = "MDB::End User";
}
<script src="~/Scripts/jquery.dataTables.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.dataTable.editTable.js" type="text/javascript"></script>

<script type="text/javascript" charset="utf-8">

        // the profitLoss data table
        var enduserTbl = null;

        //the company whose Enduser need to be listed
        var selectedCompanyId = -1;
        //var selectedCompanyName = '';
        var selectedInvoiceCustomerId = -1;

        var columnDefs = [
                { sWidth: '1%', bSortable: false, bVisible: true, aTargets: [0] },
                { sWidth: '1%', bSortable: false, bVisible: false, aTargets: [1] },
                {
                    sWidth: '30%', aTargets: [2], "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                        OpenEditDialog(enduserTbl, iRow, nTd, sData);
                    }
                }
        ];

        //setup the table and other features required for this page
        $(document).ready(function () {

            //Disable cache
            $.ajaxSetup({ cache: false });

            enduserTbl = $('#EndUser_tbl').editTable({
                sListURL: '/Contract/EndUserList/',
                fnServerData: EndUserListParameter,
                sDeleteURL: '/Contract/EndUserDelete',
                sAddURL: '/Contract/EndUserSave',
                sUpdateURL: '/Contract/EndUserSave',
                sNewDialogLoadURL: '/Contract/EndUserCreate/',
                sEditDialogLoadURL: '/Contract/EndUserEdit',
                sDialogDivId: 'enduser_dialog',
                sToolbarSelector: '#div_toolbar',
                sAddButtonId: 'btn_newenduser',
                sEditButtonId: 'btn_editenduser',
                sDeleteButtonId: 'btn_deleteenduser',
                iDialogWidth: 450,
                iDialogHeight: 200,
                bAutoWidth: false,
                oColumnDefs: columnDefs,
                sEntityName: 'End User',
                sDeleteMessage: '@ACS.MDB.Net.App.Common.Constants.DELETE_MESSAGE_FOR_ENDUSER'
            });

            //Set default focus on search text box and Disable invalid keys for search text box (Keys like <,>,~)
            SetFocus('#EndUser_tbl_filter label input:text');
            DisableInvalidKeyForControl('#EndUser_tbl_filter label input:text');

            //Hide toolbar
            enduserTbl.fnShowToolBar(false);
            ChangeEditCaptionToView("#btn_editenduser");

            // function called to handle the change in selection
            // of a company.
            $("#ddlCompany").change(function () {
                selectedCompanyId = $(this).val();
                //selectedInvoiceCustomerId = 0;

                var companyID = { companyId: selectedCompanyId };

                $("#spinnerEndUser").show();
                ShowProgress("spinnerEndUser");

                //Get list of customers associated with company
                GetInvoiceCustomer(companyID);               
            });

            $("#ddlInvCustomer").change(function () {

                enduserTbl.fnPageChange(0, false);
                selectedInvoiceCustomerId = $(this).val();

                if (selectedInvoiceCustomerId != -1 && selectedInvoiceCustomerId != 0) {

                    enduserTbl.fnShowToolBar(true);
                    //Disable New and Delete button for Viewer
                    DisableButton("#btn_newenduser");
                    DisableButton("#btn_deleteenduser");
                    var newDialaogUrl = '/Contract/EndUserCreate?companyId=' + selectedCompanyId + '&customerId=' + selectedInvoiceCustomerId;
                    enduserTbl.fnSetNewDialogURL(newDialaogUrl);
                    enduserTbl.fnDraw(false);
                }
                else {
                    enduserTbl.fnShowToolBar(false);
                    enduserTbl.fnDraw(false);
                }
            });
        });

        // Function used to pass any additional parameters required
        // for the List function
        function EndUserListParameter(sSource, aoData, fnCallBack) {

            //add the additional data to be sent to the server
            aoData.push({ "name": "companyId", "value": selectedCompanyId });
            aoData.push({ "name": "customerId", "value": selectedInvoiceCustomerId });
         
            $.getJSON(sSource, aoData, function (json) {
            }).done(function (json) {

                fnCallBack(json);

                //To set checkbox column header selector to false
                enduserTbl.fnSetCheckBoxItemSelector();

            }).fail(function (json) {
                DisplayErrorMessage(json, false);
            });
        }

        //Get invoice customer list based on company selection
        function GetInvoiceCustomer(companyID) {

            if (selectedCompanyId > 0) {

                enduserTbl.fnPageChange(0, false);

                selectedInvoiceCustomerId = 0;
                //var postData = { companyId: selectedCompanyId };
                //Get InvoiceCustomerList based on selected company id
                $.post("/Contract/GetInvoiceCustomerList", companyID, function (response) {                  

                    if (response != null) {
                        $("#ddlInvCustomer").empty();
                        $("#ddlInvCustomer").length = -1;

                        if (response != '') {
                            AddOption("Select Invoice Customer", "-1", "#ddlInvCustomer");
                        }
                        else if (response == '') {
                            AddOption("No customer exists", "-1", "#ddlInvCustomer");
                        }

                        for (var i in response) {
                            AddOption(response[i].Name, response[i].InvoiceCustomerId, "#ddlInvCustomer");
                        }
                    }
                    enduserTbl.fnDraw(false);
                    enduserTbl.fnShowToolBar(false);

                    HideProgress("spinnerEndUser");
                    $("#spinnerEndUser").hide();
                });
                }
                else {
                    $("#ddlInvCustomer").empty();
                    selectedCompanyId = 0;
                    selectedInvoiceCustomerId = 0;
                //$("#ddlInvCustomer").val = -1;
                    AddOption("Select Invoice Customer", "0", "#ddlInvCustomer");
                    enduserTbl.fnDraw(false);
                    enduserTbl.fnShowToolBar(false);

                    HideProgress("spinnerEndUser");
                    $("#spinnerEndUser").hide();
                }
        }

        //Set the menu item as selected
        HighlightSelectedMenuItem("ContractsMenu")
</script>

<div class="pageTitle">
    Manage End User
    <hr />
</div>

@Html.HiddenFor(m => m.CompanyId)
<table style="width: 100%;">
    <tr>
        <td style="width: 32%;">
            <div style="margin-bottom: 10px">@Html.Partial("CompanyList")</div>
        </td>

        <td>
            <div style="margin-bottom: 10px">
                @if (Model != null && Model.InvoiceCustomerList != null)
                {
                    <div>
                        @Html.Label("Select Invoice Customer:", new { @class = "labelforDropdownList" })
                        @Html.DropDownListFor(x => x.InvoiceCustomerId,
                    new SelectList(Model.InvoiceCustomerList, "ID", "Name"),
                    "Select Invoice Customer",
                    new { @id = "ddlInvCustomer", @class = "DropdownListStyle" })
                    </div>
                }
            </div>
        </td>
        <td style="text-align: right;">
            <div id='div_toolbar' class="DatatableGridButtonStyle" style="margin-top: 0px;"></div>
        </td>
    </tr>
</table>
<table style="width: 100%">
    <tr>
        <td>
            <div>
                <table cellpadding="0" cellspacing="0" border="0" class="display" id="EndUser_tbl" width="100%">

                    <thead>
                        <tr>
                            <th>
                                <input type="checkbox" id="selectall" />
                            </th>
                            <th>@Html.DisplayNameFor(model => model.ID) </th>
                            <th>@Html.DisplayNameFor(model => model.Name) </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>

            <div id="enduser_dialog" title="Add EndUser"></div>
        </td>
    </tr>
</table>
<div id="spinnerEndUser" style="display: none; width: 100%; height: 100%; position: fixed; text-align: center; border: 0px; vertical-align: central; left: 0; top: 0; z-index: 1000; background: rgb(255,255,255) url('/Images/Loading.gif') 50% 50% no-repeat; -ms-filter: 'alpha(opacity = 50)'; filter: alpha(opacity=50); opacity: 0.6; }" />