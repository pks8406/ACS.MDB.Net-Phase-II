#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACS.MDB.Library.DataAccess.LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ARBS_Service")]
	public partial class MDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActivityRestriction(ActivityRestriction instance);
    partial void UpdateActivityRestriction(ActivityRestriction instance);
    partial void DeleteActivityRestriction(ActivityRestriction instance);
    partial void InsertAudit(Audit instance);
    partial void UpdateAudit(Audit instance);
    partial void DeleteAudit(Audit instance);
    partial void InsertAuditReason(AuditReason instance);
    partial void UpdateAuditReason(AuditReason instance);
    partial void DeleteAuditReason(AuditReason instance);
    partial void InsertBillingLineTag(BillingLineTag instance);
    partial void UpdateBillingLineTag(BillingLineTag instance);
    partial void DeleteBillingLineTag(BillingLineTag instance);
    partial void InsertBusinessPartner(BusinessPartner instance);
    partial void UpdateBusinessPartner(BusinessPartner instance);
    partial void DeleteBusinessPartner(BusinessPartner instance);
    partial void InsertChargeFrequency(ChargeFrequency instance);
    partial void UpdateChargeFrequency(ChargeFrequency instance);
    partial void DeleteChargeFrequency(ChargeFrequency instance);
    partial void InsertChargingIndex(ChargingIndex instance);
    partial void UpdateChargingIndex(ChargingIndex instance);
    partial void DeleteChargingIndex(ChargingIndex instance);
    partial void InsertChargingUplift(ChargingUplift instance);
    partial void UpdateChargingUplift(ChargingUplift instance);
    partial void DeleteChargingUplift(ChargingUplift instance);
    partial void InsertContractLine(ContractLine instance);
    partial void UpdateContractLine(ContractLine instance);
    partial void DeleteContractLine(ContractLine instance);
    partial void InsertContractMaintenance(ContractMaintenance instance);
    partial void UpdateContractMaintenance(ContractMaintenance instance);
    partial void DeleteContractMaintenance(ContractMaintenance instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertCustomerComment(CustomerComment instance);
    partial void UpdateCustomerComment(CustomerComment instance);
    partial void DeleteCustomerComment(CustomerComment instance);
    partial void InsertDataUploadSheet(DataUploadSheet instance);
    partial void UpdateDataUploadSheet(DataUploadSheet instance);
    partial void DeleteDataUploadSheet(DataUploadSheet instance);
    partial void InsertDivision(Division instance);
    partial void UpdateDivision(Division instance);
    partial void DeleteDivision(Division instance);
    partial void InsertEndUser(EndUser instance);
    partial void UpdateEndUser(EndUser instance);
    partial void DeleteEndUser(EndUser instance);
    partial void InsertMaintenanceBillingLine(MaintenanceBillingLine instance);
    partial void UpdateMaintenanceBillingLine(MaintenanceBillingLine instance);
    partial void DeleteMaintenanceBillingLine(MaintenanceBillingLine instance);
    partial void InsertMilestone(Milestone instance);
    partial void UpdateMilestone(Milestone instance);
    partial void DeleteMilestone(Milestone instance);
    partial void InsertMilestoneBillingLine(MilestoneBillingLine instance);
    partial void UpdateMilestoneBillingLine(MilestoneBillingLine instance);
    partial void DeleteMilestoneBillingLine(MilestoneBillingLine instance);
    partial void InsertMilestoneLine(MilestoneLine instance);
    partial void UpdateMilestoneLine(MilestoneLine instance);
    partial void DeleteMilestoneLine(MilestoneLine instance);
    partial void InsertMilestoneStatus(MilestoneStatus instance);
    partial void UpdateMilestoneStatus(MilestoneStatus instance);
    partial void DeleteMilestoneStatus(MilestoneStatus instance);
    partial void InsertOAAccountCode(OAAccountCode instance);
    partial void UpdateOAAccountCode(OAAccountCode instance);
    partial void DeleteOAAccountCode(OAAccountCode instance);
    partial void InsertOAActivityCode(OAActivityCode instance);
    partial void UpdateOAActivityCode(OAActivityCode instance);
    partial void DeleteOAActivityCode(OAActivityCode instance);
    partial void InsertOACompany(OACompany instance);
    partial void UpdateOACompany(OACompany instance);
    partial void DeleteOACompany(OACompany instance);
    partial void InsertOACostCentre(OACostCentre instance);
    partial void UpdateOACostCentre(OACostCentre instance);
    partial void DeleteOACostCentre(OACostCentre instance);
    partial void InsertOACustomer(OACustomer instance);
    partial void UpdateOACustomer(OACustomer instance);
    partial void DeleteOACustomer(OACustomer instance);
    partial void InsertOAJobCode(OAJobCode instance);
    partial void UpdateOAJobCode(OAJobCode instance);
    partial void DeleteOAJobCode(OAJobCode instance);
    partial void InsertOAPeriod(OAPeriod instance);
    partial void UpdateOAPeriod(OAPeriod instance);
    partial void DeleteOAPeriod(OAPeriod instance);
    partial void InsertOATransaction(OATransaction instance);
    partial void UpdateOATransaction(OATransaction instance);
    partial void DeleteOATransaction(OATransaction instance);
    partial void InsertP_LMapping(P_LMapping instance);
    partial void UpdateP_LMapping(P_LMapping instance);
    partial void DeleteP_LMapping(P_LMapping instance);
    partial void InsertProductRange(ProductRange instance);
    partial void UpdateProductRange(ProductRange instance);
    partial void DeleteProductRange(ProductRange instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertRecalculation(Recalculation instance);
    partial void UpdateRecalculation(Recalculation instance);
    partial void DeleteRecalculation(Recalculation instance);
    partial void InsertSubProduct(SubProduct instance);
    partial void UpdateSubProduct(SubProduct instance);
    partial void DeleteSubProduct(SubProduct instance);
    partial void InsertUserCompanyMapping(UserCompanyMapping instance);
    partial void UpdateUserCompanyMapping(UserCompanyMapping instance);
    partial void DeleteUserCompanyMapping(UserCompanyMapping instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public MDBDataContext() : 
				base(global::ACS.MDB.Library.Properties.Settings.Default.ARBS_ServiceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActivityRestriction> ActivityRestrictions
		{
			get
			{
				return this.GetTable<ActivityRestriction>();
			}
		}
		
		public System.Data.Linq.Table<Audit> Audits
		{
			get
			{
				return this.GetTable<Audit>();
			}
		}
		
		public System.Data.Linq.Table<AuditReason> AuditReasons
		{
			get
			{
				return this.GetTable<AuditReason>();
			}
		}
		
		public System.Data.Linq.Table<BillingLineTag> BillingLineTags
		{
			get
			{
				return this.GetTable<BillingLineTag>();
			}
		}
		
		public System.Data.Linq.Table<BusinessPartner> BusinessPartners
		{
			get
			{
				return this.GetTable<BusinessPartner>();
			}
		}
		
		public System.Data.Linq.Table<ChargeFrequency> ChargeFrequencies
		{
			get
			{
				return this.GetTable<ChargeFrequency>();
			}
		}
		
		public System.Data.Linq.Table<ChargingIndex> ChargingIndexes
		{
			get
			{
				return this.GetTable<ChargingIndex>();
			}
		}
		
		public System.Data.Linq.Table<ChargingUplift> ChargingUplifts
		{
			get
			{
				return this.GetTable<ChargingUplift>();
			}
		}
		
		public System.Data.Linq.Table<ContractLine> ContractLines
		{
			get
			{
				return this.GetTable<ContractLine>();
			}
		}
		
		public System.Data.Linq.Table<ContractMaintenance> ContractMaintenances
		{
			get
			{
				return this.GetTable<ContractMaintenance>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<CustomerComment> CustomerComments
		{
			get
			{
				return this.GetTable<CustomerComment>();
			}
		}
		
		public System.Data.Linq.Table<DataUploadSheet> DataUploadSheets
		{
			get
			{
				return this.GetTable<DataUploadSheet>();
			}
		}
		
		public System.Data.Linq.Table<Division> Divisions
		{
			get
			{
				return this.GetTable<Division>();
			}
		}
		
		public System.Data.Linq.Table<EndUser> EndUsers
		{
			get
			{
				return this.GetTable<EndUser>();
			}
		}
		
		public System.Data.Linq.Table<MaintenanceBillingLine> MaintenanceBillingLines
		{
			get
			{
				return this.GetTable<MaintenanceBillingLine>();
			}
		}
		
		public System.Data.Linq.Table<Milestone> Milestones
		{
			get
			{
				return this.GetTable<Milestone>();
			}
		}
		
		public System.Data.Linq.Table<MilestoneBillingLine> MilestoneBillingLines
		{
			get
			{
				return this.GetTable<MilestoneBillingLine>();
			}
		}
		
		public System.Data.Linq.Table<MilestoneLine> MilestoneLines
		{
			get
			{
				return this.GetTable<MilestoneLine>();
			}
		}
		
		public System.Data.Linq.Table<MilestoneStatus> MilestoneStatus
		{
			get
			{
				return this.GetTable<MilestoneStatus>();
			}
		}
		
		public System.Data.Linq.Table<OAAccountCode> OAAccountCodes
		{
			get
			{
				return this.GetTable<OAAccountCode>();
			}
		}
		
		public System.Data.Linq.Table<OAActivityCode> OAActivityCodes
		{
			get
			{
				return this.GetTable<OAActivityCode>();
			}
		}
		
		public System.Data.Linq.Table<OACompany> OACompanies
		{
			get
			{
				return this.GetTable<OACompany>();
			}
		}
		
		public System.Data.Linq.Table<OACostCentre> OACostCentres
		{
			get
			{
				return this.GetTable<OACostCentre>();
			}
		}
		
		public System.Data.Linq.Table<OACustomer> OACustomers
		{
			get
			{
				return this.GetTable<OACustomer>();
			}
		}
		
		public System.Data.Linq.Table<OAJobCode> OAJobCodes
		{
			get
			{
				return this.GetTable<OAJobCode>();
			}
		}
		
		public System.Data.Linq.Table<OAPeriod> OAPeriods
		{
			get
			{
				return this.GetTable<OAPeriod>();
			}
		}
		
		public System.Data.Linq.Table<OATransaction> OATransactions
		{
			get
			{
				return this.GetTable<OATransaction>();
			}
		}
		
		public System.Data.Linq.Table<P_LMapping> P_LMappings
		{
			get
			{
				return this.GetTable<P_LMapping>();
			}
		}
		
		public System.Data.Linq.Table<ProductRange> ProductRanges
		{
			get
			{
				return this.GetTable<ProductRange>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Recalculation> Recalculations
		{
			get
			{
				return this.GetTable<Recalculation>();
			}
		}
		
		public System.Data.Linq.Table<SubProduct> SubProducts
		{
			get
			{
				return this.GetTable<SubProduct>();
			}
		}
		
		public System.Data.Linq.Table<UserCompanyMapping> UserCompanyMappings
		{
			get
			{
				return this.GetTable<UserCompanyMapping>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityRestriction")]
	public partial class ActivityRestriction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ActivityCategory;
		
		private string _Description;
		
		private string _StartCode;
		
		private string _EndCode;
		
		private EntitySet<ContractLine> _ContractLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActivityCategoryChanging(string value);
    partial void OnActivityCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartCodeChanging(string value);
    partial void OnStartCodeChanged();
    partial void OnEndCodeChanging(string value);
    partial void OnEndCodeChanged();
    #endregion
		
		public ActivityRestriction()
		{
			this._ContractLines = new EntitySet<ContractLine>(new Action<ContractLine>(this.attach_ContractLines), new Action<ContractLine>(this.detach_ContractLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityCategory", DbType="NVarChar(12)")]
		public string ActivityCategory
		{
			get
			{
				return this._ActivityCategory;
			}
			set
			{
				if ((this._ActivityCategory != value))
				{
					this.OnActivityCategoryChanging(value);
					this.SendPropertyChanging();
					this._ActivityCategory = value;
					this.SendPropertyChanged("ActivityCategory");
					this.OnActivityCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(60)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartCode", DbType="NVarChar(10)")]
		public string StartCode
		{
			get
			{
				return this._StartCode;
			}
			set
			{
				if ((this._StartCode != value))
				{
					this.OnStartCodeChanging(value);
					this.SendPropertyChanging();
					this._StartCode = value;
					this.SendPropertyChanged("StartCode");
					this.OnStartCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndCode", DbType="NVarChar(10)")]
		public string EndCode
		{
			get
			{
				return this._EndCode;
			}
			set
			{
				if ((this._EndCode != value))
				{
					this.OnEndCodeChanging(value);
					this.SendPropertyChanging();
					this._EndCode = value;
					this.SendPropertyChanged("EndCode");
					this.OnEndCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityRestriction_ContractLine", Storage="_ContractLines", ThisKey="ID", OtherKey="ActivityCategoryID")]
		public EntitySet<ContractLine> ContractLines
		{
			get
			{
				return this._ContractLines;
			}
			set
			{
				this._ContractLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.ActivityRestriction = this;
		}
		
		private void detach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.ActivityRestriction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Audit")]
	public partial class Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TableName;
		
		private string _OldValue;
		
		private string _NewValue;
		
		private string _FieldName;
		
		private string _Action;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    #endregion
		
		public Audit()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(4000)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(4000)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="VarChar(50)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(50)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Audit", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Audits.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Audits.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditReason")]
	public partial class AuditReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReasonCode;
		
		private string _ReasonDescription;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdationDate;
		
		private EntitySet<ContractMaintenance> _ContractMaintenances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReasonCodeChanging(int value);
    partial void OnReasonCodeChanged();
    partial void OnReasonDescriptionChanging(string value);
    partial void OnReasonDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdationDateChanged();
    #endregion
		
		public AuditReason()
		{
			this._ContractMaintenances = new EntitySet<ContractMaintenance>(new Action<ContractMaintenance>(this.attach_ContractMaintenances), new Action<ContractMaintenance>(this.detach_ContractMaintenances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonCode", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReasonCode
		{
			get
			{
				return this._ReasonCode;
			}
			set
			{
				if ((this._ReasonCode != value))
				{
					this.OnReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._ReasonCode = value;
					this.SendPropertyChanged("ReasonCode");
					this.OnReasonCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonDescription", DbType="NVarChar(100)")]
		public string ReasonDescription
		{
			get
			{
				return this._ReasonDescription;
			}
			set
			{
				if ((this._ReasonDescription != value))
				{
					this.OnReasonDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ReasonDescription = value;
					this.SendPropertyChanged("ReasonDescription");
					this.OnReasonDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdationDate
		{
			get
			{
				return this._LastUpdationDate;
			}
			set
			{
				if ((this._LastUpdationDate != value))
				{
					this.OnLastUpdationDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdationDate = value;
					this.SendPropertyChanged("LastUpdationDate");
					this.OnLastUpdationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuditReason_ContractMaintenance", Storage="_ContractMaintenances", ThisKey="ReasonCode", OtherKey="ReasonCode")]
		public EntitySet<ContractMaintenance> ContractMaintenances
		{
			get
			{
				return this._ContractMaintenances;
			}
			set
			{
				this._ContractMaintenances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.AuditReason = this;
		}
		
		private void detach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.AuditReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillingLineTags")]
	public partial class BillingLineTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TagName;
		
		private string _Description;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTagNameChanging(string value);
    partial void OnTagNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    #endregion
		
		public BillingLineTag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagName", DbType="NVarChar(100)")]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this.OnTagNameChanging(value);
					this.SendPropertyChanging();
					this._TagName = value;
					this.SendPropertyChanged("TagName");
					this.OnTagNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessPartner")]
	public partial class BusinessPartner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldBPID;
		
		private int _InvoiceCustomerID;
		
		private int _CompanyID;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<EndUser> _EndUsers;
		
		private EntityRef<OACompany> _OACompany;
		
		private EntityRef<OACustomer> _OACustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldBPIDChanging(System.Nullable<int> value);
    partial void OnOldBPIDChanged();
    partial void OnInvoiceCustomerIDChanging(int value);
    partial void OnInvoiceCustomerIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public BusinessPartner()
		{
			this._EndUsers = new EntitySet<EndUser>(new Action<EndUser>(this.attach_EndUsers), new Action<EndUser>(this.detach_EndUsers));
			this._OACompany = default(EntityRef<OACompany>);
			this._OACustomer = default(EntityRef<OACustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBPID", DbType="Int")]
		public System.Nullable<int> OldBPID
		{
			get
			{
				return this._OldBPID;
			}
			set
			{
				if ((this._OldBPID != value))
				{
					this.OnOldBPIDChanging(value);
					this.SendPropertyChanging();
					this._OldBPID = value;
					this.SendPropertyChanged("OldBPID");
					this.OnOldBPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCustomerID", DbType="Int NOT NULL")]
		public int InvoiceCustomerID
		{
			get
			{
				return this._InvoiceCustomerID;
			}
			set
			{
				if ((this._InvoiceCustomerID != value))
				{
					if (this._OACustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCustomerID = value;
					this.SendPropertyChanged("InvoiceCustomerID");
					this.OnInvoiceCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessPartner_EndUser", Storage="_EndUsers", ThisKey="ID", OtherKey="BusinessPartnerID")]
		public EntitySet<EndUser> EndUsers
		{
			get
			{
				return this._EndUsers;
			}
			set
			{
				this._EndUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_BusinessPartner", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.BusinessPartners.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.BusinessPartners.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACustomer_BusinessPartner", Storage="_OACustomer", ThisKey="InvoiceCustomerID", OtherKey="ID", IsForeignKey=true)]
		public OACustomer OACustomer
		{
			get
			{
				return this._OACustomer.Entity;
			}
			set
			{
				OACustomer previousValue = this._OACustomer.Entity;
				if (((previousValue != value) 
							|| (this._OACustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACustomer.Entity = null;
						previousValue.BusinessPartners.Remove(this);
					}
					this._OACustomer.Entity = value;
					if ((value != null))
					{
						value.BusinessPartners.Add(this);
						this._InvoiceCustomerID = value.ID;
					}
					else
					{
						this._InvoiceCustomerID = default(int);
					}
					this.SendPropertyChanged("OACustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EndUsers(EndUser entity)
		{
			this.SendPropertyChanging();
			entity.BusinessPartner = this;
		}
		
		private void detach_EndUsers(EndUser entity)
		{
			this.SendPropertyChanging();
			entity.BusinessPartner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChargeFrequency")]
	public partial class ChargeFrequency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Frequency;
		
		private string _FrequencyName;
		
		private EntitySet<ContractMaintenance> _ContractMaintenances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFrequencyChanging(string value);
    partial void OnFrequencyChanged();
    partial void OnFrequencyNameChanging(string value);
    partial void OnFrequencyNameChanged();
    #endregion
		
		public ChargeFrequency()
		{
			this._ContractMaintenances = new EntitySet<ContractMaintenance>(new Action<ContractMaintenance>(this.attach_ContractMaintenances), new Action<ContractMaintenance>(this.detach_ContractMaintenances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="NVarChar(2)")]
		public string Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencyName", DbType="NVarChar(40)")]
		public string FrequencyName
		{
			get
			{
				return this._FrequencyName;
			}
			set
			{
				if ((this._FrequencyName != value))
				{
					this.OnFrequencyNameChanging(value);
					this.SendPropertyChanging();
					this._FrequencyName = value;
					this.SendPropertyChanged("FrequencyName");
					this.OnFrequencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChargeFrequency_ContractMaintenance", Storage="_ContractMaintenances", ThisKey="ID", OtherKey="ChargeFrequencyID")]
		public EntitySet<ContractMaintenance> ContractMaintenances
		{
			get
			{
				return this._ContractMaintenances;
			}
			set
			{
				this._ContractMaintenances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.ChargeFrequency = this;
		}
		
		private void detach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.ChargeFrequency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChargingIndex")]
	public partial class ChargingIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldChargingID;
		
		private string _ChargingIndex1;
		
		private string _Description;
		
		private bool _IndexUsed;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<ChargingUplift> _ChargingUplifts;
		
		private EntitySet<ContractMaintenance> _ContractMaintenances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldChargingIDChanging(System.Nullable<int> value);
    partial void OnOldChargingIDChanged();
    partial void OnChargingIndex1Changing(string value);
    partial void OnChargingIndex1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIndexUsedChanging(bool value);
    partial void OnIndexUsedChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public ChargingIndex()
		{
			this._ChargingUplifts = new EntitySet<ChargingUplift>(new Action<ChargingUplift>(this.attach_ChargingUplifts), new Action<ChargingUplift>(this.detach_ChargingUplifts));
			this._ContractMaintenances = new EntitySet<ContractMaintenance>(new Action<ContractMaintenance>(this.attach_ContractMaintenances), new Action<ContractMaintenance>(this.detach_ContractMaintenances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldChargingID", DbType="Int")]
		public System.Nullable<int> OldChargingID
		{
			get
			{
				return this._OldChargingID;
			}
			set
			{
				if ((this._OldChargingID != value))
				{
					this.OnOldChargingIDChanging(value);
					this.SendPropertyChanging();
					this._OldChargingID = value;
					this.SendPropertyChanged("OldChargingID");
					this.OnOldChargingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ChargingIndex", Storage="_ChargingIndex1", DbType="NVarChar(6)")]
		public string ChargingIndex1
		{
			get
			{
				return this._ChargingIndex1;
			}
			set
			{
				if ((this._ChargingIndex1 != value))
				{
					this.OnChargingIndex1Changing(value);
					this.SendPropertyChanging();
					this._ChargingIndex1 = value;
					this.SendPropertyChanged("ChargingIndex1");
					this.OnChargingIndex1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(60)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexUsed", DbType="Bit NOT NULL")]
		public bool IndexUsed
		{
			get
			{
				return this._IndexUsed;
			}
			set
			{
				if ((this._IndexUsed != value))
				{
					this.OnIndexUsedChanging(value);
					this.SendPropertyChanging();
					this._IndexUsed = value;
					this.SendPropertyChanged("IndexUsed");
					this.OnIndexUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChargingIndex_ChargingUplift", Storage="_ChargingUplifts", ThisKey="ID", OtherKey="IndexId")]
		public EntitySet<ChargingUplift> ChargingUplifts
		{
			get
			{
				return this._ChargingUplifts;
			}
			set
			{
				this._ChargingUplifts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChargingIndex_ContractMaintenance", Storage="_ContractMaintenances", ThisKey="ID", OtherKey="InflationIndexID")]
		public EntitySet<ContractMaintenance> ContractMaintenances
		{
			get
			{
				return this._ContractMaintenances;
			}
			set
			{
				this._ContractMaintenances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChargingUplifts(ChargingUplift entity)
		{
			this.SendPropertyChanging();
			entity.ChargingIndex = this;
		}
		
		private void detach_ChargingUplifts(ChargingUplift entity)
		{
			this.SendPropertyChanging();
			entity.ChargingIndex = null;
		}
		
		private void attach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.ChargingIndex = this;
		}
		
		private void detach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.ChargingIndex = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChargingUplift")]
	public partial class ChargingUplift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldChargingUpliftID;
		
		private System.Nullable<System.DateTime> _ChargingUpliftDate;
		
		private string _UpliftIndex;
		
		private int _IndexId;
		
		private System.Nullable<decimal> _ProposedRate;
		
		private System.Nullable<decimal> _ActualRate;
		
		private System.Nullable<bool> _RateConfirmed;
		
		private System.Nullable<decimal> _IndexRate;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntityRef<ChargingIndex> _ChargingIndex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldChargingUpliftIDChanging(System.Nullable<int> value);
    partial void OnOldChargingUpliftIDChanged();
    partial void OnChargingUpliftDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChargingUpliftDateChanged();
    partial void OnUpliftIndexChanging(string value);
    partial void OnUpliftIndexChanged();
    partial void OnIndexIdChanging(int value);
    partial void OnIndexIdChanged();
    partial void OnProposedRateChanging(System.Nullable<decimal> value);
    partial void OnProposedRateChanged();
    partial void OnActualRateChanging(System.Nullable<decimal> value);
    partial void OnActualRateChanged();
    partial void OnRateConfirmedChanging(System.Nullable<bool> value);
    partial void OnRateConfirmedChanged();
    partial void OnIndexRateChanging(System.Nullable<decimal> value);
    partial void OnIndexRateChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public ChargingUplift()
		{
			this._ChargingIndex = default(EntityRef<ChargingIndex>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldChargingUpliftID", DbType="Int")]
		public System.Nullable<int> OldChargingUpliftID
		{
			get
			{
				return this._OldChargingUpliftID;
			}
			set
			{
				if ((this._OldChargingUpliftID != value))
				{
					this.OnOldChargingUpliftIDChanging(value);
					this.SendPropertyChanging();
					this._OldChargingUpliftID = value;
					this.SendPropertyChanged("OldChargingUpliftID");
					this.OnOldChargingUpliftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargingUpliftDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChargingUpliftDate
		{
			get
			{
				return this._ChargingUpliftDate;
			}
			set
			{
				if ((this._ChargingUpliftDate != value))
				{
					this.OnChargingUpliftDateChanging(value);
					this.SendPropertyChanging();
					this._ChargingUpliftDate = value;
					this.SendPropertyChanged("ChargingUpliftDate");
					this.OnChargingUpliftDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpliftIndex", DbType="NVarChar(6)")]
		public string UpliftIndex
		{
			get
			{
				return this._UpliftIndex;
			}
			set
			{
				if ((this._UpliftIndex != value))
				{
					this.OnUpliftIndexChanging(value);
					this.SendPropertyChanging();
					this._UpliftIndex = value;
					this.SendPropertyChanged("UpliftIndex");
					this.OnUpliftIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexId", DbType="Int NOT NULL")]
		public int IndexId
		{
			get
			{
				return this._IndexId;
			}
			set
			{
				if ((this._IndexId != value))
				{
					if (this._ChargingIndex.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIndexIdChanging(value);
					this.SendPropertyChanging();
					this._IndexId = value;
					this.SendPropertyChanged("IndexId");
					this.OnIndexIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedRate", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> ProposedRate
		{
			get
			{
				return this._ProposedRate;
			}
			set
			{
				if ((this._ProposedRate != value))
				{
					this.OnProposedRateChanging(value);
					this.SendPropertyChanging();
					this._ProposedRate = value;
					this.SendPropertyChanged("ProposedRate");
					this.OnProposedRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualRate", DbType="Decimal(5,4)")]
		public System.Nullable<decimal> ActualRate
		{
			get
			{
				return this._ActualRate;
			}
			set
			{
				if ((this._ActualRate != value))
				{
					this.OnActualRateChanging(value);
					this.SendPropertyChanging();
					this._ActualRate = value;
					this.SendPropertyChanged("ActualRate");
					this.OnActualRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateConfirmed", DbType="Bit")]
		public System.Nullable<bool> RateConfirmed
		{
			get
			{
				return this._RateConfirmed;
			}
			set
			{
				if ((this._RateConfirmed != value))
				{
					this.OnRateConfirmedChanging(value);
					this.SendPropertyChanging();
					this._RateConfirmed = value;
					this.SendPropertyChanged("RateConfirmed");
					this.OnRateConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexRate", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> IndexRate
		{
			get
			{
				return this._IndexRate;
			}
			set
			{
				if ((this._IndexRate != value))
				{
					this.OnIndexRateChanging(value);
					this.SendPropertyChanging();
					this._IndexRate = value;
					this.SendPropertyChanged("IndexRate");
					this.OnIndexRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChargingIndex_ChargingUplift", Storage="_ChargingIndex", ThisKey="IndexId", OtherKey="ID", IsForeignKey=true)]
		public ChargingIndex ChargingIndex
		{
			get
			{
				return this._ChargingIndex.Entity;
			}
			set
			{
				ChargingIndex previousValue = this._ChargingIndex.Entity;
				if (((previousValue != value) 
							|| (this._ChargingIndex.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChargingIndex.Entity = null;
						previousValue.ChargingUplifts.Remove(this);
					}
					this._ChargingIndex.Entity = value;
					if ((value != null))
					{
						value.ChargingUplifts.Add(this);
						this._IndexId = value.ID;
					}
					else
					{
						this._IndexId = default(int);
					}
					this.SendPropertyChanged("ChargingIndex");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractLines")]
	public partial class ContractLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldContractLineID;
		
		private int _ContractID;
		
		private string _LineStatus;
		
		private string _LineDescription;
		
		private string _ActivityCategory;
		
		private int _ActivityCategoryID;
		
		private int _ActivityCodeID;
		
		private int _QTY;
		
		private int _JobCodeID;
		
		private int _AccountCodeID;
		
		private int _CostCentreID;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<ContractMaintenance> _ContractMaintenances;
		
		private EntitySet<Milestone> _Milestones;
		
		private EntityRef<ActivityRestriction> _ActivityRestriction;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<OAAccountCode> _OAAccountCode;
		
		private EntityRef<OAActivityCode> _OAActivityCode;
		
		private EntityRef<OACostCentre> _OACostCentre;
		
		private EntityRef<OAJobCode> _OAJobCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldContractLineIDChanging(System.Nullable<int> value);
    partial void OnOldContractLineIDChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnLineStatusChanging(string value);
    partial void OnLineStatusChanged();
    partial void OnLineDescriptionChanging(string value);
    partial void OnLineDescriptionChanged();
    partial void OnActivityCategoryChanging(string value);
    partial void OnActivityCategoryChanged();
    partial void OnActivityCategoryIDChanging(int value);
    partial void OnActivityCategoryIDChanged();
    partial void OnActivityCodeIDChanging(int value);
    partial void OnActivityCodeIDChanged();
    partial void OnQTYChanging(int value);
    partial void OnQTYChanged();
    partial void OnJobCodeIDChanging(int value);
    partial void OnJobCodeIDChanged();
    partial void OnAccountCodeIDChanging(int value);
    partial void OnAccountCodeIDChanged();
    partial void OnCostCentreIDChanging(int value);
    partial void OnCostCentreIDChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public ContractLine()
		{
			this._ContractMaintenances = new EntitySet<ContractMaintenance>(new Action<ContractMaintenance>(this.attach_ContractMaintenances), new Action<ContractMaintenance>(this.detach_ContractMaintenances));
			this._Milestones = new EntitySet<Milestone>(new Action<Milestone>(this.attach_Milestones), new Action<Milestone>(this.detach_Milestones));
			this._ActivityRestriction = default(EntityRef<ActivityRestriction>);
			this._Contract = default(EntityRef<Contract>);
			this._OAAccountCode = default(EntityRef<OAAccountCode>);
			this._OAActivityCode = default(EntityRef<OAActivityCode>);
			this._OACostCentre = default(EntityRef<OACostCentre>);
			this._OAJobCode = default(EntityRef<OAJobCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldContractLineID", DbType="Int")]
		public System.Nullable<int> OldContractLineID
		{
			get
			{
				return this._OldContractLineID;
			}
			set
			{
				if ((this._OldContractLineID != value))
				{
					this.OnOldContractLineIDChanging(value);
					this.SendPropertyChanging();
					this._OldContractLineID = value;
					this.SendPropertyChanged("OldContractLineID");
					this.OnOldContractLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineStatus", DbType="NVarChar(2)")]
		public string LineStatus
		{
			get
			{
				return this._LineStatus;
			}
			set
			{
				if ((this._LineStatus != value))
				{
					this.OnLineStatusChanging(value);
					this.SendPropertyChanging();
					this._LineStatus = value;
					this.SendPropertyChanged("LineStatus");
					this.OnLineStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineDescription", DbType="NVarChar(60)")]
		public string LineDescription
		{
			get
			{
				return this._LineDescription;
			}
			set
			{
				if ((this._LineDescription != value))
				{
					this.OnLineDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LineDescription = value;
					this.SendPropertyChanged("LineDescription");
					this.OnLineDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityCategory", DbType="NVarChar(40)")]
		public string ActivityCategory
		{
			get
			{
				return this._ActivityCategory;
			}
			set
			{
				if ((this._ActivityCategory != value))
				{
					this.OnActivityCategoryChanging(value);
					this.SendPropertyChanging();
					this._ActivityCategory = value;
					this.SendPropertyChanged("ActivityCategory");
					this.OnActivityCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityCategoryID", DbType="Int NOT NULL")]
		public int ActivityCategoryID
		{
			get
			{
				return this._ActivityCategoryID;
			}
			set
			{
				if ((this._ActivityCategoryID != value))
				{
					if (this._ActivityRestriction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityCategoryID = value;
					this.SendPropertyChanged("ActivityCategoryID");
					this.OnActivityCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityCodeID", DbType="Int NOT NULL")]
		public int ActivityCodeID
		{
			get
			{
				return this._ActivityCodeID;
			}
			set
			{
				if ((this._ActivityCodeID != value))
				{
					if (this._OAActivityCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityCodeIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityCodeID = value;
					this.SendPropertyChanged("ActivityCodeID");
					this.OnActivityCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTY", DbType="Int NOT NULL")]
		public int QTY
		{
			get
			{
				return this._QTY;
			}
			set
			{
				if ((this._QTY != value))
				{
					this.OnQTYChanging(value);
					this.SendPropertyChanging();
					this._QTY = value;
					this.SendPropertyChanged("QTY");
					this.OnQTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCodeID", DbType="Int NOT NULL")]
		public int JobCodeID
		{
			get
			{
				return this._JobCodeID;
			}
			set
			{
				if ((this._JobCodeID != value))
				{
					if (this._OAJobCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobCodeIDChanging(value);
					this.SendPropertyChanging();
					this._JobCodeID = value;
					this.SendPropertyChanged("JobCodeID");
					this.OnJobCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCodeID", DbType="Int NOT NULL")]
		public int AccountCodeID
		{
			get
			{
				return this._AccountCodeID;
			}
			set
			{
				if ((this._AccountCodeID != value))
				{
					if (this._OAAccountCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountCodeIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCodeID = value;
					this.SendPropertyChanged("AccountCodeID");
					this.OnAccountCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCentreID", DbType="Int NOT NULL")]
		public int CostCentreID
		{
			get
			{
				return this._CostCentreID;
			}
			set
			{
				if ((this._CostCentreID != value))
				{
					if (this._OACostCentre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostCentreIDChanging(value);
					this.SendPropertyChanging();
					this._CostCentreID = value;
					this.SendPropertyChanged("CostCentreID");
					this.OnCostCentreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractLine_ContractMaintenance", Storage="_ContractMaintenances", ThisKey="ID", OtherKey="ContractLineID")]
		public EntitySet<ContractMaintenance> ContractMaintenances
		{
			get
			{
				return this._ContractMaintenances;
			}
			set
			{
				this._ContractMaintenances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractLine_Milestone", Storage="_Milestones", ThisKey="ID", OtherKey="ContractLineID")]
		public EntitySet<Milestone> Milestones
		{
			get
			{
				return this._Milestones;
			}
			set
			{
				this._Milestones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityRestriction_ContractLine", Storage="_ActivityRestriction", ThisKey="ActivityCategoryID", OtherKey="ID", IsForeignKey=true)]
		public ActivityRestriction ActivityRestriction
		{
			get
			{
				return this._ActivityRestriction.Entity;
			}
			set
			{
				ActivityRestriction previousValue = this._ActivityRestriction.Entity;
				if (((previousValue != value) 
							|| (this._ActivityRestriction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityRestriction.Entity = null;
						previousValue.ContractLines.Remove(this);
					}
					this._ActivityRestriction.Entity = value;
					if ((value != null))
					{
						value.ContractLines.Add(this);
						this._ActivityCategoryID = value.ID;
					}
					else
					{
						this._ActivityCategoryID = default(int);
					}
					this.SendPropertyChanged("ActivityRestriction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractLine", Storage="_Contract", ThisKey="ContractID", OtherKey="ID", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.ContractLines.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.ContractLines.Add(this);
						this._ContractID = value.ID;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAAccountCode_ContractLine", Storage="_OAAccountCode", ThisKey="AccountCodeID", OtherKey="ID", IsForeignKey=true)]
		public OAAccountCode OAAccountCode
		{
			get
			{
				return this._OAAccountCode.Entity;
			}
			set
			{
				OAAccountCode previousValue = this._OAAccountCode.Entity;
				if (((previousValue != value) 
							|| (this._OAAccountCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OAAccountCode.Entity = null;
						previousValue.ContractLines.Remove(this);
					}
					this._OAAccountCode.Entity = value;
					if ((value != null))
					{
						value.ContractLines.Add(this);
						this._AccountCodeID = value.ID;
					}
					else
					{
						this._AccountCodeID = default(int);
					}
					this.SendPropertyChanged("OAAccountCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAActivityCode_ContractLine", Storage="_OAActivityCode", ThisKey="ActivityCodeID", OtherKey="ID", IsForeignKey=true)]
		public OAActivityCode OAActivityCode
		{
			get
			{
				return this._OAActivityCode.Entity;
			}
			set
			{
				OAActivityCode previousValue = this._OAActivityCode.Entity;
				if (((previousValue != value) 
							|| (this._OAActivityCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OAActivityCode.Entity = null;
						previousValue.ContractLines.Remove(this);
					}
					this._OAActivityCode.Entity = value;
					if ((value != null))
					{
						value.ContractLines.Add(this);
						this._ActivityCodeID = value.ID;
					}
					else
					{
						this._ActivityCodeID = default(int);
					}
					this.SendPropertyChanged("OAActivityCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACostCentre_ContractLine", Storage="_OACostCentre", ThisKey="CostCentreID", OtherKey="ID", IsForeignKey=true)]
		public OACostCentre OACostCentre
		{
			get
			{
				return this._OACostCentre.Entity;
			}
			set
			{
				OACostCentre previousValue = this._OACostCentre.Entity;
				if (((previousValue != value) 
							|| (this._OACostCentre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACostCentre.Entity = null;
						previousValue.ContractLines.Remove(this);
					}
					this._OACostCentre.Entity = value;
					if ((value != null))
					{
						value.ContractLines.Add(this);
						this._CostCentreID = value.ID;
					}
					else
					{
						this._CostCentreID = default(int);
					}
					this.SendPropertyChanged("OACostCentre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAJobCode_ContractLine", Storage="_OAJobCode", ThisKey="JobCodeID", OtherKey="ID", IsForeignKey=true)]
		public OAJobCode OAJobCode
		{
			get
			{
				return this._OAJobCode.Entity;
			}
			set
			{
				OAJobCode previousValue = this._OAJobCode.Entity;
				if (((previousValue != value) 
							|| (this._OAJobCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OAJobCode.Entity = null;
						previousValue.ContractLines.Remove(this);
					}
					this._OAJobCode.Entity = value;
					if ((value != null))
					{
						value.ContractLines.Add(this);
						this._JobCodeID = value.ID;
					}
					else
					{
						this._JobCodeID = default(int);
					}
					this.SendPropertyChanged("OAJobCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.ContractLine = this;
		}
		
		private void detach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.ContractLine = null;
		}
		
		private void attach_Milestones(Milestone entity)
		{
			this.SendPropertyChanging();
			entity.ContractLine = this;
		}
		
		private void detach_Milestones(Milestone entity)
		{
			this.SendPropertyChanging();
			entity.ContractLine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractMaintenance")]
	public partial class ContractMaintenance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldMaintenanceID;
		
		private int _ContractID;
		
		private int _ContractLineID;
		
		private System.DateTime _CreationDate;
		
		private int _QTY;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _FixedPeriod;
		
		private System.Nullable<int> _NumberOfPeriod;
		
		private string _PeriodFrequency;
		
		private int _ChargeFrequencyID;
		
		private System.Nullable<bool> _QuoteRequired;
		
		private int _InvoiceInAdvance;
		
		private System.Nullable<bool> _SeparateInvoice;
		
		private System.Nullable<bool> _BillInArears;
		
		private System.Nullable<System.DateTime> _FirstPeriodStartDate;
		
		private decimal _FirstPeriodAmount;
		
		private System.Nullable<System.DateTime> _FirstRenewalDate;
		
		private System.Nullable<bool> _UpliftRequired;
		
		private System.Nullable<System.DateTime> _FirstAnnualUpliftDate;
		
		private decimal _BaseAnnualAmount;
		
		private string _InflationIndexName;
		
		private System.Nullable<int> _InflationIndexID;
		
		private System.Nullable<bool> _FixedUpliftRequired;
		
		private System.Nullable<decimal> _InflationFixedAdditional;
		
		private string _TerminationReason;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _FinalRenewalStartDate;
		
		private System.Nullable<System.DateTime> _FinalRenewalEndDate;
		
		private System.Nullable<decimal> _EndAmount;
		
		private System.Nullable<int> _LastMilestoneBilled;
		
		private int _ProductID;
		
		private System.Nullable<int> _SubProductID;
		
		private int _InvoiceAdvancedArrears;
		
		private System.Nullable<System.DateTime> _LatestVersionDate;
		
		private int _IncludeInForecast;
		
		private int _ReasonCode;
		
		private System.Nullable<System.DateTime> _ReasonDate;
		
		private System.Nullable<int> _DeleteReason;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.Nullable<System.DateTime> _ForecastBillingStartDate;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _GroupId;
		
		private string _GroupName;
		
		private System.Nullable<bool> _IsGrouped;
		
		private System.Nullable<bool> _IsDefaultLineInGroup;
		
		private System.Nullable<int> _DocumentTypeID;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<MaintenanceBillingLine> _MaintenanceBillingLines;
		
		private EntitySet<Milestone> _Milestones;
		
		private EntityRef<AuditReason> _AuditReason;
		
		private EntityRef<ChargeFrequency> _ChargeFrequency;
		
		private EntityRef<ChargingIndex> _ChargingIndex;
		
		private EntityRef<ContractLine> _ContractLine;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<SubProduct> _SubProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldMaintenanceIDChanging(System.Nullable<int> value);
    partial void OnOldMaintenanceIDChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnContractLineIDChanging(int value);
    partial void OnContractLineIDChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnQTYChanging(int value);
    partial void OnQTYChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnFixedPeriodChanging(System.Nullable<bool> value);
    partial void OnFixedPeriodChanged();
    partial void OnNumberOfPeriodChanging(System.Nullable<int> value);
    partial void OnNumberOfPeriodChanged();
    partial void OnPeriodFrequencyChanging(string value);
    partial void OnPeriodFrequencyChanged();
    partial void OnChargeFrequencyIDChanging(int value);
    partial void OnChargeFrequencyIDChanged();
    partial void OnQuoteRequiredChanging(System.Nullable<bool> value);
    partial void OnQuoteRequiredChanged();
    partial void OnInvoiceInAdvanceChanging(int value);
    partial void OnInvoiceInAdvanceChanged();
    partial void OnSeparateInvoiceChanging(System.Nullable<bool> value);
    partial void OnSeparateInvoiceChanged();
    partial void OnBillInArearsChanging(System.Nullable<bool> value);
    partial void OnBillInArearsChanged();
    partial void OnFirstPeriodStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstPeriodStartDateChanged();
    partial void OnFirstPeriodAmountChanging(decimal value);
    partial void OnFirstPeriodAmountChanged();
    partial void OnFirstRenewalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstRenewalDateChanged();
    partial void OnUpliftRequiredChanging(System.Nullable<bool> value);
    partial void OnUpliftRequiredChanged();
    partial void OnFirstAnnualUpliftDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstAnnualUpliftDateChanged();
    partial void OnBaseAnnualAmountChanging(decimal value);
    partial void OnBaseAnnualAmountChanged();
    partial void OnInflationIndexNameChanging(string value);
    partial void OnInflationIndexNameChanged();
    partial void OnInflationIndexIDChanging(System.Nullable<int> value);
    partial void OnInflationIndexIDChanged();
    partial void OnFixedUpliftRequiredChanging(System.Nullable<bool> value);
    partial void OnFixedUpliftRequiredChanged();
    partial void OnInflationFixedAdditionalChanging(System.Nullable<decimal> value);
    partial void OnInflationFixedAdditionalChanged();
    partial void OnTerminationReasonChanging(string value);
    partial void OnTerminationReasonChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnFinalRenewalStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalRenewalStartDateChanged();
    partial void OnFinalRenewalEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalRenewalEndDateChanged();
    partial void OnEndAmountChanging(System.Nullable<decimal> value);
    partial void OnEndAmountChanged();
    partial void OnLastMilestoneBilledChanging(System.Nullable<int> value);
    partial void OnLastMilestoneBilledChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnSubProductIDChanging(System.Nullable<int> value);
    partial void OnSubProductIDChanged();
    partial void OnInvoiceAdvancedArrearsChanging(int value);
    partial void OnInvoiceAdvancedArrearsChanged();
    partial void OnLatestVersionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLatestVersionDateChanged();
    partial void OnIncludeInForecastChanging(int value);
    partial void OnIncludeInForecastChanged();
    partial void OnReasonCodeChanging(int value);
    partial void OnReasonCodeChanged();
    partial void OnReasonDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReasonDateChanged();
    partial void OnDeleteReasonChanging(System.Nullable<int> value);
    partial void OnDeleteReasonChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnForecastBillingStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnForecastBillingStartDateChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnIsGroupedChanging(System.Nullable<bool> value);
    partial void OnIsGroupedChanged();
    partial void OnIsDefaultLineInGroupChanging(System.Nullable<bool> value);
    partial void OnIsDefaultLineInGroupChanged();
    partial void OnDocumentTypeIDChanging(System.Nullable<int> value);
    partial void OnDocumentTypeIDChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public ContractMaintenance()
		{
			this._MaintenanceBillingLines = new EntitySet<MaintenanceBillingLine>(new Action<MaintenanceBillingLine>(this.attach_MaintenanceBillingLines), new Action<MaintenanceBillingLine>(this.detach_MaintenanceBillingLines));
			this._Milestones = new EntitySet<Milestone>(new Action<Milestone>(this.attach_Milestones), new Action<Milestone>(this.detach_Milestones));
			this._AuditReason = default(EntityRef<AuditReason>);
			this._ChargeFrequency = default(EntityRef<ChargeFrequency>);
			this._ChargingIndex = default(EntityRef<ChargingIndex>);
			this._ContractLine = default(EntityRef<ContractLine>);
			this._Contract = default(EntityRef<Contract>);
			this._Product = default(EntityRef<Product>);
			this._SubProduct = default(EntityRef<SubProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMaintenanceID", DbType="Int")]
		public System.Nullable<int> OldMaintenanceID
		{
			get
			{
				return this._OldMaintenanceID;
			}
			set
			{
				if ((this._OldMaintenanceID != value))
				{
					this.OnOldMaintenanceIDChanging(value);
					this.SendPropertyChanging();
					this._OldMaintenanceID = value;
					this.SendPropertyChanged("OldMaintenanceID");
					this.OnOldMaintenanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractLineID", DbType="Int NOT NULL")]
		public int ContractLineID
		{
			get
			{
				return this._ContractLineID;
			}
			set
			{
				if ((this._ContractLineID != value))
				{
					if (this._ContractLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractLineIDChanging(value);
					this.SendPropertyChanging();
					this._ContractLineID = value;
					this.SendPropertyChanged("ContractLineID");
					this.OnContractLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTY", DbType="Int NOT NULL")]
		public int QTY
		{
			get
			{
				return this._QTY;
			}
			set
			{
				if ((this._QTY != value))
				{
					this.OnQTYChanging(value);
					this.SendPropertyChanging();
					this._QTY = value;
					this.SendPropertyChanged("QTY");
					this.OnQTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedPeriod", DbType="Bit")]
		public System.Nullable<bool> FixedPeriod
		{
			get
			{
				return this._FixedPeriod;
			}
			set
			{
				if ((this._FixedPeriod != value))
				{
					this.OnFixedPeriodChanging(value);
					this.SendPropertyChanging();
					this._FixedPeriod = value;
					this.SendPropertyChanged("FixedPeriod");
					this.OnFixedPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPeriod", DbType="Int")]
		public System.Nullable<int> NumberOfPeriod
		{
			get
			{
				return this._NumberOfPeriod;
			}
			set
			{
				if ((this._NumberOfPeriod != value))
				{
					this.OnNumberOfPeriodChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPeriod = value;
					this.SendPropertyChanged("NumberOfPeriod");
					this.OnNumberOfPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodFrequency", DbType="NVarChar(2)")]
		public string PeriodFrequency
		{
			get
			{
				return this._PeriodFrequency;
			}
			set
			{
				if ((this._PeriodFrequency != value))
				{
					this.OnPeriodFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PeriodFrequency = value;
					this.SendPropertyChanged("PeriodFrequency");
					this.OnPeriodFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeFrequencyID", DbType="Int NOT NULL")]
		public int ChargeFrequencyID
		{
			get
			{
				return this._ChargeFrequencyID;
			}
			set
			{
				if ((this._ChargeFrequencyID != value))
				{
					if (this._ChargeFrequency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChargeFrequencyIDChanging(value);
					this.SendPropertyChanging();
					this._ChargeFrequencyID = value;
					this.SendPropertyChanged("ChargeFrequencyID");
					this.OnChargeFrequencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteRequired", DbType="Bit")]
		public System.Nullable<bool> QuoteRequired
		{
			get
			{
				return this._QuoteRequired;
			}
			set
			{
				if ((this._QuoteRequired != value))
				{
					this.OnQuoteRequiredChanging(value);
					this.SendPropertyChanging();
					this._QuoteRequired = value;
					this.SendPropertyChanged("QuoteRequired");
					this.OnQuoteRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceInAdvance", DbType="Int NOT NULL")]
		public int InvoiceInAdvance
		{
			get
			{
				return this._InvoiceInAdvance;
			}
			set
			{
				if ((this._InvoiceInAdvance != value))
				{
					this.OnInvoiceInAdvanceChanging(value);
					this.SendPropertyChanging();
					this._InvoiceInAdvance = value;
					this.SendPropertyChanged("InvoiceInAdvance");
					this.OnInvoiceInAdvanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeparateInvoice", DbType="Bit")]
		public System.Nullable<bool> SeparateInvoice
		{
			get
			{
				return this._SeparateInvoice;
			}
			set
			{
				if ((this._SeparateInvoice != value))
				{
					this.OnSeparateInvoiceChanging(value);
					this.SendPropertyChanging();
					this._SeparateInvoice = value;
					this.SendPropertyChanged("SeparateInvoice");
					this.OnSeparateInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillInArears", DbType="Bit")]
		public System.Nullable<bool> BillInArears
		{
			get
			{
				return this._BillInArears;
			}
			set
			{
				if ((this._BillInArears != value))
				{
					this.OnBillInArearsChanging(value);
					this.SendPropertyChanging();
					this._BillInArears = value;
					this.SendPropertyChanged("BillInArears");
					this.OnBillInArearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstPeriodStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstPeriodStartDate
		{
			get
			{
				return this._FirstPeriodStartDate;
			}
			set
			{
				if ((this._FirstPeriodStartDate != value))
				{
					this.OnFirstPeriodStartDateChanging(value);
					this.SendPropertyChanging();
					this._FirstPeriodStartDate = value;
					this.SendPropertyChanged("FirstPeriodStartDate");
					this.OnFirstPeriodStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstPeriodAmount", DbType="Decimal(10,2) NOT NULL")]
		public decimal FirstPeriodAmount
		{
			get
			{
				return this._FirstPeriodAmount;
			}
			set
			{
				if ((this._FirstPeriodAmount != value))
				{
					this.OnFirstPeriodAmountChanging(value);
					this.SendPropertyChanging();
					this._FirstPeriodAmount = value;
					this.SendPropertyChanged("FirstPeriodAmount");
					this.OnFirstPeriodAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRenewalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstRenewalDate
		{
			get
			{
				return this._FirstRenewalDate;
			}
			set
			{
				if ((this._FirstRenewalDate != value))
				{
					this.OnFirstRenewalDateChanging(value);
					this.SendPropertyChanging();
					this._FirstRenewalDate = value;
					this.SendPropertyChanged("FirstRenewalDate");
					this.OnFirstRenewalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpliftRequired", DbType="Bit")]
		public System.Nullable<bool> UpliftRequired
		{
			get
			{
				return this._UpliftRequired;
			}
			set
			{
				if ((this._UpliftRequired != value))
				{
					this.OnUpliftRequiredChanging(value);
					this.SendPropertyChanging();
					this._UpliftRequired = value;
					this.SendPropertyChanged("UpliftRequired");
					this.OnUpliftRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstAnnualUpliftDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstAnnualUpliftDate
		{
			get
			{
				return this._FirstAnnualUpliftDate;
			}
			set
			{
				if ((this._FirstAnnualUpliftDate != value))
				{
					this.OnFirstAnnualUpliftDateChanging(value);
					this.SendPropertyChanging();
					this._FirstAnnualUpliftDate = value;
					this.SendPropertyChanged("FirstAnnualUpliftDate");
					this.OnFirstAnnualUpliftDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseAnnualAmount", DbType="Decimal(10,2) NOT NULL")]
		public decimal BaseAnnualAmount
		{
			get
			{
				return this._BaseAnnualAmount;
			}
			set
			{
				if ((this._BaseAnnualAmount != value))
				{
					this.OnBaseAnnualAmountChanging(value);
					this.SendPropertyChanging();
					this._BaseAnnualAmount = value;
					this.SendPropertyChanged("BaseAnnualAmount");
					this.OnBaseAnnualAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InflationIndexName", DbType="NVarChar(6)")]
		public string InflationIndexName
		{
			get
			{
				return this._InflationIndexName;
			}
			set
			{
				if ((this._InflationIndexName != value))
				{
					this.OnInflationIndexNameChanging(value);
					this.SendPropertyChanging();
					this._InflationIndexName = value;
					this.SendPropertyChanged("InflationIndexName");
					this.OnInflationIndexNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InflationIndexID", DbType="Int")]
		public System.Nullable<int> InflationIndexID
		{
			get
			{
				return this._InflationIndexID;
			}
			set
			{
				if ((this._InflationIndexID != value))
				{
					if (this._ChargingIndex.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInflationIndexIDChanging(value);
					this.SendPropertyChanging();
					this._InflationIndexID = value;
					this.SendPropertyChanged("InflationIndexID");
					this.OnInflationIndexIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedUpliftRequired", DbType="Bit")]
		public System.Nullable<bool> FixedUpliftRequired
		{
			get
			{
				return this._FixedUpliftRequired;
			}
			set
			{
				if ((this._FixedUpliftRequired != value))
				{
					this.OnFixedUpliftRequiredChanging(value);
					this.SendPropertyChanging();
					this._FixedUpliftRequired = value;
					this.SendPropertyChanged("FixedUpliftRequired");
					this.OnFixedUpliftRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InflationFixedAdditional", DbType="Decimal(5,4)")]
		public System.Nullable<decimal> InflationFixedAdditional
		{
			get
			{
				return this._InflationFixedAdditional;
			}
			set
			{
				if ((this._InflationFixedAdditional != value))
				{
					this.OnInflationFixedAdditionalChanging(value);
					this.SendPropertyChanging();
					this._InflationFixedAdditional = value;
					this.SendPropertyChanged("InflationFixedAdditional");
					this.OnInflationFixedAdditionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminationReason", DbType="NVarChar(4000)")]
		public string TerminationReason
		{
			get
			{
				return this._TerminationReason;
			}
			set
			{
				if ((this._TerminationReason != value))
				{
					this.OnTerminationReasonChanging(value);
					this.SendPropertyChanging();
					this._TerminationReason = value;
					this.SendPropertyChanged("TerminationReason");
					this.OnTerminationReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(4000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalRenewalStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinalRenewalStartDate
		{
			get
			{
				return this._FinalRenewalStartDate;
			}
			set
			{
				if ((this._FinalRenewalStartDate != value))
				{
					this.OnFinalRenewalStartDateChanging(value);
					this.SendPropertyChanging();
					this._FinalRenewalStartDate = value;
					this.SendPropertyChanged("FinalRenewalStartDate");
					this.OnFinalRenewalStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalRenewalEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinalRenewalEndDate
		{
			get
			{
				return this._FinalRenewalEndDate;
			}
			set
			{
				if ((this._FinalRenewalEndDate != value))
				{
					this.OnFinalRenewalEndDateChanging(value);
					this.SendPropertyChanging();
					this._FinalRenewalEndDate = value;
					this.SendPropertyChanged("FinalRenewalEndDate");
					this.OnFinalRenewalEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAmount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> EndAmount
		{
			get
			{
				return this._EndAmount;
			}
			set
			{
				if ((this._EndAmount != value))
				{
					this.OnEndAmountChanging(value);
					this.SendPropertyChanging();
					this._EndAmount = value;
					this.SendPropertyChanged("EndAmount");
					this.OnEndAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMilestoneBilled", DbType="Int")]
		public System.Nullable<int> LastMilestoneBilled
		{
			get
			{
				return this._LastMilestoneBilled;
			}
			set
			{
				if ((this._LastMilestoneBilled != value))
				{
					this.OnLastMilestoneBilledChanging(value);
					this.SendPropertyChanging();
					this._LastMilestoneBilled = value;
					this.SendPropertyChanged("LastMilestoneBilled");
					this.OnLastMilestoneBilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductID", DbType="Int")]
		public System.Nullable<int> SubProductID
		{
			get
			{
				return this._SubProductID;
			}
			set
			{
				if ((this._SubProductID != value))
				{
					if (this._SubProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubProductIDChanging(value);
					this.SendPropertyChanging();
					this._SubProductID = value;
					this.SendPropertyChanged("SubProductID");
					this.OnSubProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAdvancedArrears", DbType="Int NOT NULL")]
		public int InvoiceAdvancedArrears
		{
			get
			{
				return this._InvoiceAdvancedArrears;
			}
			set
			{
				if ((this._InvoiceAdvancedArrears != value))
				{
					this.OnInvoiceAdvancedArrearsChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAdvancedArrears = value;
					this.SendPropertyChanged("InvoiceAdvancedArrears");
					this.OnInvoiceAdvancedArrearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatestVersionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LatestVersionDate
		{
			get
			{
				return this._LatestVersionDate;
			}
			set
			{
				if ((this._LatestVersionDate != value))
				{
					this.OnLatestVersionDateChanging(value);
					this.SendPropertyChanging();
					this._LatestVersionDate = value;
					this.SendPropertyChanged("LatestVersionDate");
					this.OnLatestVersionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeInForecast", DbType="Int NOT NULL")]
		public int IncludeInForecast
		{
			get
			{
				return this._IncludeInForecast;
			}
			set
			{
				if ((this._IncludeInForecast != value))
				{
					this.OnIncludeInForecastChanging(value);
					this.SendPropertyChanging();
					this._IncludeInForecast = value;
					this.SendPropertyChanged("IncludeInForecast");
					this.OnIncludeInForecastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonCode", DbType="Int NOT NULL")]
		public int ReasonCode
		{
			get
			{
				return this._ReasonCode;
			}
			set
			{
				if ((this._ReasonCode != value))
				{
					if (this._AuditReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._ReasonCode = value;
					this.SendPropertyChanged("ReasonCode");
					this.OnReasonCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReasonDate
		{
			get
			{
				return this._ReasonDate;
			}
			set
			{
				if ((this._ReasonDate != value))
				{
					this.OnReasonDateChanging(value);
					this.SendPropertyChanging();
					this._ReasonDate = value;
					this.SendPropertyChanged("ReasonDate");
					this.OnReasonDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteReason", DbType="Int")]
		public System.Nullable<int> DeleteReason
		{
			get
			{
				return this._DeleteReason;
			}
			set
			{
				if ((this._DeleteReason != value))
				{
					this.OnDeleteReasonChanging(value);
					this.SendPropertyChanging();
					this._DeleteReason = value;
					this.SendPropertyChanged("DeleteReason");
					this.OnDeleteReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForecastBillingStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ForecastBillingStartDate
		{
			get
			{
				return this._ForecastBillingStartDate;
			}
			set
			{
				if ((this._ForecastBillingStartDate != value))
				{
					this.OnForecastBillingStartDateChanging(value);
					this.SendPropertyChanging();
					this._ForecastBillingStartDate = value;
					this.SendPropertyChanged("ForecastBillingStartDate");
					this.OnForecastBillingStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(40)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGrouped", DbType="Bit")]
		public System.Nullable<bool> IsGrouped
		{
			get
			{
				return this._IsGrouped;
			}
			set
			{
				if ((this._IsGrouped != value))
				{
					this.OnIsGroupedChanging(value);
					this.SendPropertyChanging();
					this._IsGrouped = value;
					this.SendPropertyChanged("IsGrouped");
					this.OnIsGroupedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefaultLineInGroup", DbType="Bit")]
		public System.Nullable<bool> IsDefaultLineInGroup
		{
			get
			{
				return this._IsDefaultLineInGroup;
			}
			set
			{
				if ((this._IsDefaultLineInGroup != value))
				{
					this.OnIsDefaultLineInGroupChanging(value);
					this.SendPropertyChanging();
					this._IsDefaultLineInGroup = value;
					this.SendPropertyChanged("IsDefaultLineInGroup");
					this.OnIsDefaultLineInGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", DbType="Int")]
		public System.Nullable<int> DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					this.OnDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeID = value;
					this.SendPropertyChanged("DocumentTypeID");
					this.OnDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractMaintenance_MaintenanceBillingLine", Storage="_MaintenanceBillingLines", ThisKey="ID", OtherKey="MaintenanceID")]
		public EntitySet<MaintenanceBillingLine> MaintenanceBillingLines
		{
			get
			{
				return this._MaintenanceBillingLines;
			}
			set
			{
				this._MaintenanceBillingLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractMaintenance_Milestone", Storage="_Milestones", ThisKey="ID", OtherKey="MaintenanceID")]
		public EntitySet<Milestone> Milestones
		{
			get
			{
				return this._Milestones;
			}
			set
			{
				this._Milestones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuditReason_ContractMaintenance", Storage="_AuditReason", ThisKey="ReasonCode", OtherKey="ReasonCode", IsForeignKey=true)]
		public AuditReason AuditReason
		{
			get
			{
				return this._AuditReason.Entity;
			}
			set
			{
				AuditReason previousValue = this._AuditReason.Entity;
				if (((previousValue != value) 
							|| (this._AuditReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuditReason.Entity = null;
						previousValue.ContractMaintenances.Remove(this);
					}
					this._AuditReason.Entity = value;
					if ((value != null))
					{
						value.ContractMaintenances.Add(this);
						this._ReasonCode = value.ReasonCode;
					}
					else
					{
						this._ReasonCode = default(int);
					}
					this.SendPropertyChanged("AuditReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChargeFrequency_ContractMaintenance", Storage="_ChargeFrequency", ThisKey="ChargeFrequencyID", OtherKey="ID", IsForeignKey=true)]
		public ChargeFrequency ChargeFrequency
		{
			get
			{
				return this._ChargeFrequency.Entity;
			}
			set
			{
				ChargeFrequency previousValue = this._ChargeFrequency.Entity;
				if (((previousValue != value) 
							|| (this._ChargeFrequency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChargeFrequency.Entity = null;
						previousValue.ContractMaintenances.Remove(this);
					}
					this._ChargeFrequency.Entity = value;
					if ((value != null))
					{
						value.ContractMaintenances.Add(this);
						this._ChargeFrequencyID = value.ID;
					}
					else
					{
						this._ChargeFrequencyID = default(int);
					}
					this.SendPropertyChanged("ChargeFrequency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChargingIndex_ContractMaintenance", Storage="_ChargingIndex", ThisKey="InflationIndexID", OtherKey="ID", IsForeignKey=true)]
		public ChargingIndex ChargingIndex
		{
			get
			{
				return this._ChargingIndex.Entity;
			}
			set
			{
				ChargingIndex previousValue = this._ChargingIndex.Entity;
				if (((previousValue != value) 
							|| (this._ChargingIndex.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChargingIndex.Entity = null;
						previousValue.ContractMaintenances.Remove(this);
					}
					this._ChargingIndex.Entity = value;
					if ((value != null))
					{
						value.ContractMaintenances.Add(this);
						this._InflationIndexID = value.ID;
					}
					else
					{
						this._InflationIndexID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChargingIndex");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractLine_ContractMaintenance", Storage="_ContractLine", ThisKey="ContractLineID", OtherKey="ID", IsForeignKey=true)]
		public ContractLine ContractLine
		{
			get
			{
				return this._ContractLine.Entity;
			}
			set
			{
				ContractLine previousValue = this._ContractLine.Entity;
				if (((previousValue != value) 
							|| (this._ContractLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractLine.Entity = null;
						previousValue.ContractMaintenances.Remove(this);
					}
					this._ContractLine.Entity = value;
					if ((value != null))
					{
						value.ContractMaintenances.Add(this);
						this._ContractLineID = value.ID;
					}
					else
					{
						this._ContractLineID = default(int);
					}
					this.SendPropertyChanged("ContractLine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractMaintenance", Storage="_Contract", ThisKey="ContractID", OtherKey="ID", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.ContractMaintenances.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.ContractMaintenances.Add(this);
						this._ContractID = value.ID;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ContractMaintenance", Storage="_Product", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ContractMaintenances.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ContractMaintenances.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubProduct_ContractMaintenance", Storage="_SubProduct", ThisKey="SubProductID", OtherKey="ID", IsForeignKey=true)]
		public SubProduct SubProduct
		{
			get
			{
				return this._SubProduct.Entity;
			}
			set
			{
				SubProduct previousValue = this._SubProduct.Entity;
				if (((previousValue != value) 
							|| (this._SubProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubProduct.Entity = null;
						previousValue.ContractMaintenances.Remove(this);
					}
					this._SubProduct.Entity = value;
					if ((value != null))
					{
						value.ContractMaintenances.Add(this);
						this._SubProductID = value.ID;
					}
					else
					{
						this._SubProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SubProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaintenanceBillingLines(MaintenanceBillingLine entity)
		{
			this.SendPropertyChanging();
			entity.ContractMaintenance = this;
		}
		
		private void detach_MaintenanceBillingLines(MaintenanceBillingLine entity)
		{
			this.SendPropertyChanging();
			entity.ContractMaintenance = null;
		}
		
		private void attach_Milestones(Milestone entity)
		{
			this.SendPropertyChanging();
			entity.ContractMaintenance = this;
		}
		
		private void detach_Milestones(Milestone entity)
		{
			this.SendPropertyChanging();
			entity.ContractMaintenance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contracts")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldContractID;
		
		private string _ContractNumber;
		
		private string _EndUserID;
		
		private int _InvoiceCustomerID;
		
		private string _OldCustomerID;
		
		private int _CompanyID;
		
		private int _DivisionID;
		
		private int _CurrencyID;
		
		private string _POReferenceNo;
		
		private string _CurrencyName;
		
		private System.Nullable<int> _AtRisk;
		
		private System.Nullable<System.DateTime> _EarlyTerminationDate;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<ContractLine> _ContractLines;
		
		private EntitySet<ContractMaintenance> _ContractMaintenances;
		
		private EntitySet<Milestone> _Milestones;
		
		private EntitySet<MilestoneBillingLine> _MilestoneBillingLines;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Division> _Division;
		
		private EntityRef<OACompany> _OACompany;
		
		private EntityRef<OACustomer> _OACustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldContractIDChanging(System.Nullable<int> value);
    partial void OnOldContractIDChanged();
    partial void OnContractNumberChanging(string value);
    partial void OnContractNumberChanged();
    partial void OnEndUserIDChanging(string value);
    partial void OnEndUserIDChanged();
    partial void OnInvoiceCustomerIDChanging(int value);
    partial void OnInvoiceCustomerIDChanged();
    partial void OnOldCustomerIDChanging(string value);
    partial void OnOldCustomerIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnDivisionIDChanging(int value);
    partial void OnDivisionIDChanged();
    partial void OnCurrencyIDChanging(int value);
    partial void OnCurrencyIDChanged();
    partial void OnPOReferenceNoChanging(string value);
    partial void OnPOReferenceNoChanged();
    partial void OnCurrencyNameChanging(string value);
    partial void OnCurrencyNameChanged();
    partial void OnAtRiskChanging(System.Nullable<int> value);
    partial void OnAtRiskChanged();
    partial void OnEarlyTerminationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEarlyTerminationDateChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Contract()
		{
			this._ContractLines = new EntitySet<ContractLine>(new Action<ContractLine>(this.attach_ContractLines), new Action<ContractLine>(this.detach_ContractLines));
			this._ContractMaintenances = new EntitySet<ContractMaintenance>(new Action<ContractMaintenance>(this.attach_ContractMaintenances), new Action<ContractMaintenance>(this.detach_ContractMaintenances));
			this._Milestones = new EntitySet<Milestone>(new Action<Milestone>(this.attach_Milestones), new Action<Milestone>(this.detach_Milestones));
			this._MilestoneBillingLines = new EntitySet<MilestoneBillingLine>(new Action<MilestoneBillingLine>(this.attach_MilestoneBillingLines), new Action<MilestoneBillingLine>(this.detach_MilestoneBillingLines));
			this._Currency = default(EntityRef<Currency>);
			this._Division = default(EntityRef<Division>);
			this._OACompany = default(EntityRef<OACompany>);
			this._OACustomer = default(EntityRef<OACustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldContractID", DbType="Int")]
		public System.Nullable<int> OldContractID
		{
			get
			{
				return this._OldContractID;
			}
			set
			{
				if ((this._OldContractID != value))
				{
					this.OnOldContractIDChanging(value);
					this.SendPropertyChanging();
					this._OldContractID = value;
					this.SendPropertyChanged("OldContractID");
					this.OnOldContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNumber", DbType="NVarChar(50)")]
		public string ContractNumber
		{
			get
			{
				return this._ContractNumber;
			}
			set
			{
				if ((this._ContractNumber != value))
				{
					this.OnContractNumberChanging(value);
					this.SendPropertyChanging();
					this._ContractNumber = value;
					this.SendPropertyChanged("ContractNumber");
					this.OnContractNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndUserID", DbType="NVarChar(40)")]
		public string EndUserID
		{
			get
			{
				return this._EndUserID;
			}
			set
			{
				if ((this._EndUserID != value))
				{
					this.OnEndUserIDChanging(value);
					this.SendPropertyChanging();
					this._EndUserID = value;
					this.SendPropertyChanged("EndUserID");
					this.OnEndUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCustomerID", DbType="Int NOT NULL")]
		public int InvoiceCustomerID
		{
			get
			{
				return this._InvoiceCustomerID;
			}
			set
			{
				if ((this._InvoiceCustomerID != value))
				{
					if (this._OACustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCustomerID = value;
					this.SendPropertyChanged("InvoiceCustomerID");
					this.OnInvoiceCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCustomerID", DbType="NVarChar(40)")]
		public string OldCustomerID
		{
			get
			{
				return this._OldCustomerID;
			}
			set
			{
				if ((this._OldCustomerID != value))
				{
					this.OnOldCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._OldCustomerID = value;
					this.SendPropertyChanged("OldCustomerID");
					this.OnOldCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="Int NOT NULL")]
		public int DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIDChanging(value);
					this.SendPropertyChanging();
					this._DivisionID = value;
					this.SendPropertyChanged("DivisionID");
					this.OnDivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int NOT NULL")]
		public int CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POReferenceNo", DbType="NVarChar(60)")]
		public string POReferenceNo
		{
			get
			{
				return this._POReferenceNo;
			}
			set
			{
				if ((this._POReferenceNo != value))
				{
					this.OnPOReferenceNoChanging(value);
					this.SendPropertyChanging();
					this._POReferenceNo = value;
					this.SendPropertyChanged("POReferenceNo");
					this.OnPOReferenceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="NVarChar(8)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this.OnCurrencyNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyName = value;
					this.SendPropertyChanged("CurrencyName");
					this.OnCurrencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtRisk", DbType="Int")]
		public System.Nullable<int> AtRisk
		{
			get
			{
				return this._AtRisk;
			}
			set
			{
				if ((this._AtRisk != value))
				{
					this.OnAtRiskChanging(value);
					this.SendPropertyChanging();
					this._AtRisk = value;
					this.SendPropertyChanged("AtRisk");
					this.OnAtRiskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarlyTerminationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EarlyTerminationDate
		{
			get
			{
				return this._EarlyTerminationDate;
			}
			set
			{
				if ((this._EarlyTerminationDate != value))
				{
					this.OnEarlyTerminationDateChanging(value);
					this.SendPropertyChanging();
					this._EarlyTerminationDate = value;
					this.SendPropertyChanged("EarlyTerminationDate");
					this.OnEarlyTerminationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractLine", Storage="_ContractLines", ThisKey="ID", OtherKey="ContractID")]
		public EntitySet<ContractLine> ContractLines
		{
			get
			{
				return this._ContractLines;
			}
			set
			{
				this._ContractLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractMaintenance", Storage="_ContractMaintenances", ThisKey="ID", OtherKey="ContractID")]
		public EntitySet<ContractMaintenance> ContractMaintenances
		{
			get
			{
				return this._ContractMaintenances;
			}
			set
			{
				this._ContractMaintenances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Milestone", Storage="_Milestones", ThisKey="ID", OtherKey="ContractID")]
		public EntitySet<Milestone> Milestones
		{
			get
			{
				return this._Milestones;
			}
			set
			{
				this._Milestones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_MilestoneBillingLine", Storage="_MilestoneBillingLines", ThisKey="ID", OtherKey="ContractID")]
		public EntitySet<MilestoneBillingLine> MilestoneBillingLines
		{
			get
			{
				return this._MilestoneBillingLines;
			}
			set
			{
				this._MilestoneBillingLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Contract", Storage="_Currency", ThisKey="CurrencyID", OtherKey="ID", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._CurrencyID = value.ID;
					}
					else
					{
						this._CurrencyID = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Contract", Storage="_Division", ThisKey="DivisionID", OtherKey="ID", IsForeignKey=true)]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._DivisionID = value.ID;
					}
					else
					{
						this._DivisionID = default(int);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_Contract", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACustomer_Contract", Storage="_OACustomer", ThisKey="InvoiceCustomerID", OtherKey="ID", IsForeignKey=true)]
		public OACustomer OACustomer
		{
			get
			{
				return this._OACustomer.Entity;
			}
			set
			{
				OACustomer previousValue = this._OACustomer.Entity;
				if (((previousValue != value) 
							|| (this._OACustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACustomer.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._OACustomer.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._InvoiceCustomerID = value.ID;
					}
					else
					{
						this._InvoiceCustomerID = default(int);
					}
					this.SendPropertyChanged("OACustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
		
		private void attach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
		
		private void attach_Milestones(Milestone entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_Milestones(Milestone entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
		
		private void attach_MilestoneBillingLines(MilestoneBillingLine entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_MilestoneBillingLines(MilestoneBillingLine entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CurrencyName;
		
		private string _Description;
		
		private decimal _ExchangeRate;
		
		private bool _IsActive;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<Contract> _Contracts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCurrencyNameChanging(string value);
    partial void OnCurrencyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExchangeRateChanging(decimal value);
    partial void OnExchangeRateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Currency()
		{
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="NVarChar(8)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this.OnCurrencyNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyName = value;
					this.SendPropertyChanged("CurrencyName");
					this.OnCurrencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(18,4) NOT NULL")]
		public decimal ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="CurrencyID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerComments")]
	public partial class CustomerComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerID;
		
		private string _CustomerName;
		
		private string _Comment;
		
		private bool _Group;
		
		private int _CompanyID;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntityRef<OACompany> _OACompany;
		
		private EntityRef<OACustomer> _OACustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnGroupChanging(bool value);
    partial void OnGroupChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public CustomerComment()
		{
			this._OACompany = default(EntityRef<OACompany>);
			this._OACustomer = default(EntityRef<OACustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._OACustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(500)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(440)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="Bit NOT NULL")]
		public bool Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_CustomerComment", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.CustomerComments.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.CustomerComments.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACustomer_CustomerComment", Storage="_OACustomer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public OACustomer OACustomer
		{
			get
			{
				return this._OACustomer.Entity;
			}
			set
			{
				OACustomer previousValue = this._OACustomer.Entity;
				if (((previousValue != value) 
							|| (this._OACustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACustomer.Entity = null;
						previousValue.CustomerComments.Remove(this);
					}
					this._OACustomer.Entity = value;
					if ((value != null))
					{
						value.CustomerComments.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("OACustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataUploadSheet")]
	public partial class DataUploadSheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CompanyID;
		
		private string _FileName;
		
		private System.DateTime _UploadDate;
		
		private int _UploadedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnUploadDateChanging(System.DateTime value);
    partial void OnUploadDateChanged();
    partial void OnUploadedByChanging(int value);
    partial void OnUploadedByChanged();
    #endregion
		
		public DataUploadSheet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(200)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime NOT NULL")]
		public System.DateTime UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedBy", DbType="Int NOT NULL")]
		public int UploadedBy
		{
			get
			{
				return this._UploadedBy;
			}
			set
			{
				if ((this._UploadedBy != value))
				{
					this.OnUploadedByChanging(value);
					this.SendPropertyChanging();
					this._UploadedBy = value;
					this.SendPropertyChanged("UploadedBy");
					this.OnUploadedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Division")]
	public partial class Division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CompanyID;
		
		private string _DivisionName;
		
		private System.Nullable<int> _DivisionID;
		
		private bool _IsActive;
		
		private int _DefaultInvoiceInAdvanced;
		
		private string _DocumentTypeCR;
		
		private string _DocumentTypeIN;
		
		private string _DepositDocumentTypeCR;
		
		private string _DepositDocumentTypeIN;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<Contract> _Contracts;
		
		private EntityRef<OACompany> _OACompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnDivisionNameChanging(string value);
    partial void OnDivisionNameChanged();
    partial void OnDivisionIDChanging(System.Nullable<int> value);
    partial void OnDivisionIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDefaultInvoiceInAdvancedChanging(int value);
    partial void OnDefaultInvoiceInAdvancedChanged();
    partial void OnDocumentTypeCRChanging(string value);
    partial void OnDocumentTypeCRChanged();
    partial void OnDocumentTypeINChanging(string value);
    partial void OnDocumentTypeINChanged();
    partial void OnDepositDocumentTypeCRChanging(string value);
    partial void OnDepositDocumentTypeCRChanged();
    partial void OnDepositDocumentTypeINChanging(string value);
    partial void OnDepositDocumentTypeINChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Division()
		{
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._OACompany = default(EntityRef<OACompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionName", DbType="VarChar(60)")]
		public string DivisionName
		{
			get
			{
				return this._DivisionName;
			}
			set
			{
				if ((this._DivisionName != value))
				{
					this.OnDivisionNameChanging(value);
					this.SendPropertyChanging();
					this._DivisionName = value;
					this.SendPropertyChanged("DivisionName");
					this.OnDivisionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="Int")]
		public System.Nullable<int> DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					this.OnDivisionIDChanging(value);
					this.SendPropertyChanging();
					this._DivisionID = value;
					this.SendPropertyChanged("DivisionID");
					this.OnDivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultInvoiceInAdvanced", DbType="Int NOT NULL")]
		public int DefaultInvoiceInAdvanced
		{
			get
			{
				return this._DefaultInvoiceInAdvanced;
			}
			set
			{
				if ((this._DefaultInvoiceInAdvanced != value))
				{
					this.OnDefaultInvoiceInAdvancedChanging(value);
					this.SendPropertyChanging();
					this._DefaultInvoiceInAdvanced = value;
					this.SendPropertyChanged("DefaultInvoiceInAdvanced");
					this.OnDefaultInvoiceInAdvancedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeCR", DbType="VarChar(10)")]
		public string DocumentTypeCR
		{
			get
			{
				return this._DocumentTypeCR;
			}
			set
			{
				if ((this._DocumentTypeCR != value))
				{
					this.OnDocumentTypeCRChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeCR = value;
					this.SendPropertyChanged("DocumentTypeCR");
					this.OnDocumentTypeCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeIN", DbType="VarChar(10)")]
		public string DocumentTypeIN
		{
			get
			{
				return this._DocumentTypeIN;
			}
			set
			{
				if ((this._DocumentTypeIN != value))
				{
					this.OnDocumentTypeINChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeIN = value;
					this.SendPropertyChanged("DocumentTypeIN");
					this.OnDocumentTypeINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositDocumentTypeCR", DbType="VarChar(10)")]
		public string DepositDocumentTypeCR
		{
			get
			{
				return this._DepositDocumentTypeCR;
			}
			set
			{
				if ((this._DepositDocumentTypeCR != value))
				{
					this.OnDepositDocumentTypeCRChanging(value);
					this.SendPropertyChanging();
					this._DepositDocumentTypeCR = value;
					this.SendPropertyChanged("DepositDocumentTypeCR");
					this.OnDepositDocumentTypeCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositDocumentTypeIN", DbType="VarChar(10)")]
		public string DepositDocumentTypeIN
		{
			get
			{
				return this._DepositDocumentTypeIN;
			}
			set
			{
				if ((this._DepositDocumentTypeIN != value))
				{
					this.OnDepositDocumentTypeINChanging(value);
					this.SendPropertyChanging();
					this._DepositDocumentTypeIN = value;
					this.SendPropertyChanged("DepositDocumentTypeIN");
					this.OnDepositDocumentTypeINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="DivisionID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_Division", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.Divisions.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.Divisions.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EndUser")]
	public partial class EndUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldEndUserID;
		
		private string _EndUserName;
		
		private int _BusinessPartnerID;
		
		private string _EndUserOldTextID;
		
		private string _EndUserTextID;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntityRef<BusinessPartner> _BusinessPartner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldEndUserIDChanging(System.Nullable<int> value);
    partial void OnOldEndUserIDChanged();
    partial void OnEndUserNameChanging(string value);
    partial void OnEndUserNameChanged();
    partial void OnBusinessPartnerIDChanging(int value);
    partial void OnBusinessPartnerIDChanged();
    partial void OnEndUserOldTextIDChanging(string value);
    partial void OnEndUserOldTextIDChanged();
    partial void OnEndUserTextIDChanging(string value);
    partial void OnEndUserTextIDChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public EndUser()
		{
			this._BusinessPartner = default(EntityRef<BusinessPartner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldEndUserID", DbType="Int")]
		public System.Nullable<int> OldEndUserID
		{
			get
			{
				return this._OldEndUserID;
			}
			set
			{
				if ((this._OldEndUserID != value))
				{
					this.OnOldEndUserIDChanging(value);
					this.SendPropertyChanging();
					this._OldEndUserID = value;
					this.SendPropertyChanged("OldEndUserID");
					this.OnOldEndUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndUserName", DbType="NVarChar(100)")]
		public string EndUserName
		{
			get
			{
				return this._EndUserName;
			}
			set
			{
				if ((this._EndUserName != value))
				{
					this.OnEndUserNameChanging(value);
					this.SendPropertyChanging();
					this._EndUserName = value;
					this.SendPropertyChanged("EndUserName");
					this.OnEndUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessPartnerID", DbType="Int NOT NULL")]
		public int BusinessPartnerID
		{
			get
			{
				return this._BusinessPartnerID;
			}
			set
			{
				if ((this._BusinessPartnerID != value))
				{
					if (this._BusinessPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessPartnerID = value;
					this.SendPropertyChanged("BusinessPartnerID");
					this.OnBusinessPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndUserOldTextID", DbType="NVarChar(20)")]
		public string EndUserOldTextID
		{
			get
			{
				return this._EndUserOldTextID;
			}
			set
			{
				if ((this._EndUserOldTextID != value))
				{
					this.OnEndUserOldTextIDChanging(value);
					this.SendPropertyChanging();
					this._EndUserOldTextID = value;
					this.SendPropertyChanged("EndUserOldTextID");
					this.OnEndUserOldTextIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndUserTextID", DbType="NVarChar(20)")]
		public string EndUserTextID
		{
			get
			{
				return this._EndUserTextID;
			}
			set
			{
				if ((this._EndUserTextID != value))
				{
					this.OnEndUserTextIDChanging(value);
					this.SendPropertyChanging();
					this._EndUserTextID = value;
					this.SendPropertyChanged("EndUserTextID");
					this.OnEndUserTextIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessPartner_EndUser", Storage="_BusinessPartner", ThisKey="BusinessPartnerID", OtherKey="ID", IsForeignKey=true)]
		public BusinessPartner BusinessPartner
		{
			get
			{
				return this._BusinessPartner.Entity;
			}
			set
			{
				BusinessPartner previousValue = this._BusinessPartner.Entity;
				if (((previousValue != value) 
							|| (this._BusinessPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessPartner.Entity = null;
						previousValue.EndUsers.Remove(this);
					}
					this._BusinessPartner.Entity = value;
					if ((value != null))
					{
						value.EndUsers.Add(this);
						this._BusinessPartnerID = value.ID;
					}
					else
					{
						this._BusinessPartnerID = default(int);
					}
					this.SendPropertyChanged("BusinessPartner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaintenanceBillingLines")]
	public partial class MaintenanceBillingLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldBillingLineID;
		
		private int _MaintenanceID;
		
		private string _Description;
		
		private string _LineText;
		
		private System.Nullable<int> _LineSequance;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntityRef<ContractMaintenance> _ContractMaintenance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldBillingLineIDChanging(System.Nullable<int> value);
    partial void OnOldBillingLineIDChanged();
    partial void OnMaintenanceIDChanging(int value);
    partial void OnMaintenanceIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLineTextChanging(string value);
    partial void OnLineTextChanged();
    partial void OnLineSequanceChanging(System.Nullable<int> value);
    partial void OnLineSequanceChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public MaintenanceBillingLine()
		{
			this._ContractMaintenance = default(EntityRef<ContractMaintenance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBillingLineID", DbType="Int")]
		public System.Nullable<int> OldBillingLineID
		{
			get
			{
				return this._OldBillingLineID;
			}
			set
			{
				if ((this._OldBillingLineID != value))
				{
					this.OnOldBillingLineIDChanging(value);
					this.SendPropertyChanging();
					this._OldBillingLineID = value;
					this.SendPropertyChanged("OldBillingLineID");
					this.OnOldBillingLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceID", DbType="Int NOT NULL")]
		public int MaintenanceID
		{
			get
			{
				return this._MaintenanceID;
			}
			set
			{
				if ((this._MaintenanceID != value))
				{
					if (this._ContractMaintenance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaintenanceIDChanging(value);
					this.SendPropertyChanging();
					this._MaintenanceID = value;
					this.SendPropertyChanged("MaintenanceID");
					this.OnMaintenanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineText", DbType="NVarChar(300)")]
		public string LineText
		{
			get
			{
				return this._LineText;
			}
			set
			{
				if ((this._LineText != value))
				{
					this.OnLineTextChanging(value);
					this.SendPropertyChanging();
					this._LineText = value;
					this.SendPropertyChanged("LineText");
					this.OnLineTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineSequance", DbType="Int")]
		public System.Nullable<int> LineSequance
		{
			get
			{
				return this._LineSequance;
			}
			set
			{
				if ((this._LineSequance != value))
				{
					this.OnLineSequanceChanging(value);
					this.SendPropertyChanging();
					this._LineSequance = value;
					this.SendPropertyChanged("LineSequance");
					this.OnLineSequanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractMaintenance_MaintenanceBillingLine", Storage="_ContractMaintenance", ThisKey="MaintenanceID", OtherKey="ID", IsForeignKey=true)]
		public ContractMaintenance ContractMaintenance
		{
			get
			{
				return this._ContractMaintenance.Entity;
			}
			set
			{
				ContractMaintenance previousValue = this._ContractMaintenance.Entity;
				if (((previousValue != value) 
							|| (this._ContractMaintenance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractMaintenance.Entity = null;
						previousValue.MaintenanceBillingLines.Remove(this);
					}
					this._ContractMaintenance.Entity = value;
					if ((value != null))
					{
						value.MaintenanceBillingLines.Add(this);
						this._MaintenanceID = value.ID;
					}
					else
					{
						this._MaintenanceID = default(int);
					}
					this.SendPropertyChanged("ContractMaintenance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Milestone")]
	public partial class Milestone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldMilestoneID;
		
		private int _ContractID;
		
		private int _ContractLineID;
		
		private string _Description;
		
		private string _MilestoneStatus;
		
		private int _MilestoneStatusID;
		
		private System.DateTime _EstimatedDate;
		
		private decimal _Amount;
		
		private System.Nullable<decimal> _Percentage;
		
		private System.Nullable<int> _ChargingUpliftID;
		
		private System.Nullable<decimal> _UpliftRate;
		
		private System.Nullable<decimal> _UpliftFixedRate;
		
		private System.Nullable<decimal> _Uplift;
		
		private System.Nullable<decimal> _UpliftPercentage;
		
		private System.Nullable<decimal> _IndexRate;
		
		private decimal _PreviousValue;
		
		private System.Nullable<int> _PreviousLine;
		
		private System.Nullable<bool> _IsApprovalRequired;
		
		private string _ApprovedStatus;
		
		private bool _IsApproved;
		
		private string _ApprovedBy;
		
		private System.Nullable<bool> _ApprovedByCustomer;
		
		private string _CustomerApprovedStatus;
		
		private string _ConditionType;
		
		private string _SLT_OUR_REF_2;
		
		private int _MaintenanceID;
		
		private System.Nullable<System.DateTime> _RenewalEndDate;
		
		private System.Nullable<System.DateTime> _RenewalStartDate;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<System.DateTime> _BillDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<MilestoneBillingLine> _MilestoneBillingLines;
		
		private EntitySet<MilestoneLine> _MilestoneLines;
		
		private EntityRef<ContractLine> _ContractLine;
		
		private EntityRef<ContractMaintenance> _ContractMaintenance;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<MilestoneStatus> _MilestoneStatus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldMilestoneIDChanging(System.Nullable<int> value);
    partial void OnOldMilestoneIDChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnContractLineIDChanging(int value);
    partial void OnContractLineIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMilestoneStatusChanging(string value);
    partial void OnMilestoneStatusChanged();
    partial void OnMilestoneStatusIDChanging(int value);
    partial void OnMilestoneStatusIDChanged();
    partial void OnEstimatedDateChanging(System.DateTime value);
    partial void OnEstimatedDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPercentageChanging(System.Nullable<decimal> value);
    partial void OnPercentageChanged();
    partial void OnChargingUpliftIDChanging(System.Nullable<int> value);
    partial void OnChargingUpliftIDChanged();
    partial void OnUpliftRateChanging(System.Nullable<decimal> value);
    partial void OnUpliftRateChanged();
    partial void OnUpliftFixedRateChanging(System.Nullable<decimal> value);
    partial void OnUpliftFixedRateChanged();
    partial void OnUpliftChanging(System.Nullable<decimal> value);
    partial void OnUpliftChanged();
    partial void OnUpliftPercentageChanging(System.Nullable<decimal> value);
    partial void OnUpliftPercentageChanged();
    partial void OnIndexRateChanging(System.Nullable<decimal> value);
    partial void OnIndexRateChanged();
    partial void OnPreviousValueChanging(decimal value);
    partial void OnPreviousValueChanged();
    partial void OnPreviousLineChanging(System.Nullable<int> value);
    partial void OnPreviousLineChanged();
    partial void OnIsApprovalRequiredChanging(System.Nullable<bool> value);
    partial void OnIsApprovalRequiredChanged();
    partial void OnApprovedStatusChanging(string value);
    partial void OnApprovedStatusChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    partial void OnApprovedByCustomerChanging(System.Nullable<bool> value);
    partial void OnApprovedByCustomerChanged();
    partial void OnCustomerApprovedStatusChanging(string value);
    partial void OnCustomerApprovedStatusChanged();
    partial void OnConditionTypeChanging(string value);
    partial void OnConditionTypeChanged();
    partial void OnSLT_OUR_REF_2Changing(string value);
    partial void OnSLT_OUR_REF_2Changed();
    partial void OnMaintenanceIDChanging(int value);
    partial void OnMaintenanceIDChanged();
    partial void OnRenewalEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRenewalEndDateChanged();
    partial void OnRenewalStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRenewalStartDateChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnBillDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBillDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Milestone()
		{
			this._MilestoneBillingLines = new EntitySet<MilestoneBillingLine>(new Action<MilestoneBillingLine>(this.attach_MilestoneBillingLines), new Action<MilestoneBillingLine>(this.detach_MilestoneBillingLines));
			this._MilestoneLines = new EntitySet<MilestoneLine>(new Action<MilestoneLine>(this.attach_MilestoneLines), new Action<MilestoneLine>(this.detach_MilestoneLines));
			this._ContractLine = default(EntityRef<ContractLine>);
			this._ContractMaintenance = default(EntityRef<ContractMaintenance>);
			this._Contract = default(EntityRef<Contract>);
			this._MilestoneStatus1 = default(EntityRef<MilestoneStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMilestoneID", DbType="Int")]
		public System.Nullable<int> OldMilestoneID
		{
			get
			{
				return this._OldMilestoneID;
			}
			set
			{
				if ((this._OldMilestoneID != value))
				{
					this.OnOldMilestoneIDChanging(value);
					this.SendPropertyChanging();
					this._OldMilestoneID = value;
					this.SendPropertyChanged("OldMilestoneID");
					this.OnOldMilestoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractLineID", DbType="Int NOT NULL")]
		public int ContractLineID
		{
			get
			{
				return this._ContractLineID;
			}
			set
			{
				if ((this._ContractLineID != value))
				{
					if (this._ContractLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractLineIDChanging(value);
					this.SendPropertyChanging();
					this._ContractLineID = value;
					this.SendPropertyChanged("ContractLineID");
					this.OnContractLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(60)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilestoneStatus", DbType="NVarChar(4)")]
		public string MilestoneStatus
		{
			get
			{
				return this._MilestoneStatus;
			}
			set
			{
				if ((this._MilestoneStatus != value))
				{
					this.OnMilestoneStatusChanging(value);
					this.SendPropertyChanging();
					this._MilestoneStatus = value;
					this.SendPropertyChanged("MilestoneStatus");
					this.OnMilestoneStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilestoneStatusID", DbType="Int NOT NULL")]
		public int MilestoneStatusID
		{
			get
			{
				return this._MilestoneStatusID;
			}
			set
			{
				if ((this._MilestoneStatusID != value))
				{
					if (this._MilestoneStatus1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMilestoneStatusIDChanging(value);
					this.SendPropertyChanging();
					this._MilestoneStatusID = value;
					this.SendPropertyChanged("MilestoneStatusID");
					this.OnMilestoneStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime EstimatedDate
		{
			get
			{
				return this._EstimatedDate;
			}
			set
			{
				if ((this._EstimatedDate != value))
				{
					this.OnEstimatedDateChanging(value);
					this.SendPropertyChanging();
					this._EstimatedDate = value;
					this.SendPropertyChanged("EstimatedDate");
					this.OnEstimatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargingUpliftID", DbType="Int")]
		public System.Nullable<int> ChargingUpliftID
		{
			get
			{
				return this._ChargingUpliftID;
			}
			set
			{
				if ((this._ChargingUpliftID != value))
				{
					this.OnChargingUpliftIDChanging(value);
					this.SendPropertyChanging();
					this._ChargingUpliftID = value;
					this.SendPropertyChanged("ChargingUpliftID");
					this.OnChargingUpliftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpliftRate", DbType="Decimal(5,4)")]
		public System.Nullable<decimal> UpliftRate
		{
			get
			{
				return this._UpliftRate;
			}
			set
			{
				if ((this._UpliftRate != value))
				{
					this.OnUpliftRateChanging(value);
					this.SendPropertyChanging();
					this._UpliftRate = value;
					this.SendPropertyChanged("UpliftRate");
					this.OnUpliftRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpliftFixedRate", DbType="Decimal(5,4)")]
		public System.Nullable<decimal> UpliftFixedRate
		{
			get
			{
				return this._UpliftFixedRate;
			}
			set
			{
				if ((this._UpliftFixedRate != value))
				{
					this.OnUpliftFixedRateChanging(value);
					this.SendPropertyChanging();
					this._UpliftFixedRate = value;
					this.SendPropertyChanged("UpliftFixedRate");
					this.OnUpliftFixedRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uplift", DbType="Decimal(5,4)")]
		public System.Nullable<decimal> Uplift
		{
			get
			{
				return this._Uplift;
			}
			set
			{
				if ((this._Uplift != value))
				{
					this.OnUpliftChanging(value);
					this.SendPropertyChanging();
					this._Uplift = value;
					this.SendPropertyChanged("Uplift");
					this.OnUpliftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpliftPercentage", DbType="Decimal(5,4)")]
		public System.Nullable<decimal> UpliftPercentage
		{
			get
			{
				return this._UpliftPercentage;
			}
			set
			{
				if ((this._UpliftPercentage != value))
				{
					this.OnUpliftPercentageChanging(value);
					this.SendPropertyChanging();
					this._UpliftPercentage = value;
					this.SendPropertyChanged("UpliftPercentage");
					this.OnUpliftPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexRate", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> IndexRate
		{
			get
			{
				return this._IndexRate;
			}
			set
			{
				if ((this._IndexRate != value))
				{
					this.OnIndexRateChanging(value);
					this.SendPropertyChanging();
					this._IndexRate = value;
					this.SendPropertyChanged("IndexRate");
					this.OnIndexRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousValue", DbType="Decimal(10,2) NOT NULL")]
		public decimal PreviousValue
		{
			get
			{
				return this._PreviousValue;
			}
			set
			{
				if ((this._PreviousValue != value))
				{
					this.OnPreviousValueChanging(value);
					this.SendPropertyChanging();
					this._PreviousValue = value;
					this.SendPropertyChanged("PreviousValue");
					this.OnPreviousValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousLine", DbType="Int")]
		public System.Nullable<int> PreviousLine
		{
			get
			{
				return this._PreviousLine;
			}
			set
			{
				if ((this._PreviousLine != value))
				{
					this.OnPreviousLineChanging(value);
					this.SendPropertyChanging();
					this._PreviousLine = value;
					this.SendPropertyChanged("PreviousLine");
					this.OnPreviousLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprovalRequired", DbType="Bit")]
		public System.Nullable<bool> IsApprovalRequired
		{
			get
			{
				return this._IsApprovalRequired;
			}
			set
			{
				if ((this._IsApprovalRequired != value))
				{
					this.OnIsApprovalRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsApprovalRequired = value;
					this.SendPropertyChanged("IsApprovalRequired");
					this.OnIsApprovalRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedStatus", DbType="NVarChar(2)")]
		public string ApprovedStatus
		{
			get
			{
				return this._ApprovedStatus;
			}
			set
			{
				if ((this._ApprovedStatus != value))
				{
					this.OnApprovedStatusChanging(value);
					this.SendPropertyChanging();
					this._ApprovedStatus = value;
					this.SendPropertyChanged("ApprovedStatus");
					this.OnApprovedStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="NVarChar(100)")]
		public string ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedByCustomer", DbType="Bit")]
		public System.Nullable<bool> ApprovedByCustomer
		{
			get
			{
				return this._ApprovedByCustomer;
			}
			set
			{
				if ((this._ApprovedByCustomer != value))
				{
					this.OnApprovedByCustomerChanging(value);
					this.SendPropertyChanging();
					this._ApprovedByCustomer = value;
					this.SendPropertyChanged("ApprovedByCustomer");
					this.OnApprovedByCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerApprovedStatus", DbType="NVarChar(100)")]
		public string CustomerApprovedStatus
		{
			get
			{
				return this._CustomerApprovedStatus;
			}
			set
			{
				if ((this._CustomerApprovedStatus != value))
				{
					this.OnCustomerApprovedStatusChanging(value);
					this.SendPropertyChanging();
					this._CustomerApprovedStatus = value;
					this.SendPropertyChanged("CustomerApprovedStatus");
					this.OnCustomerApprovedStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionType", DbType="NVarChar(100)")]
		public string ConditionType
		{
			get
			{
				return this._ConditionType;
			}
			set
			{
				if ((this._ConditionType != value))
				{
					this.OnConditionTypeChanging(value);
					this.SendPropertyChanging();
					this._ConditionType = value;
					this.SendPropertyChanged("ConditionType");
					this.OnConditionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLT_OUR_REF_2", DbType="NVarChar(100)")]
		public string SLT_OUR_REF_2
		{
			get
			{
				return this._SLT_OUR_REF_2;
			}
			set
			{
				if ((this._SLT_OUR_REF_2 != value))
				{
					this.OnSLT_OUR_REF_2Changing(value);
					this.SendPropertyChanging();
					this._SLT_OUR_REF_2 = value;
					this.SendPropertyChanged("SLT_OUR_REF_2");
					this.OnSLT_OUR_REF_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceID", DbType="Int NOT NULL")]
		public int MaintenanceID
		{
			get
			{
				return this._MaintenanceID;
			}
			set
			{
				if ((this._MaintenanceID != value))
				{
					if (this._ContractMaintenance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaintenanceIDChanging(value);
					this.SendPropertyChanging();
					this._MaintenanceID = value;
					this.SendPropertyChanged("MaintenanceID");
					this.OnMaintenanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenewalEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RenewalEndDate
		{
			get
			{
				return this._RenewalEndDate;
			}
			set
			{
				if ((this._RenewalEndDate != value))
				{
					this.OnRenewalEndDateChanging(value);
					this.SendPropertyChanging();
					this._RenewalEndDate = value;
					this.SendPropertyChanged("RenewalEndDate");
					this.OnRenewalEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenewalStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RenewalStartDate
		{
			get
			{
				return this._RenewalStartDate;
			}
			set
			{
				if ((this._RenewalStartDate != value))
				{
					this.OnRenewalStartDateChanging(value);
					this.SendPropertyChanging();
					this._RenewalStartDate = value;
					this.SendPropertyChanged("RenewalStartDate");
					this.OnRenewalStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BillDate
		{
			get
			{
				return this._BillDate;
			}
			set
			{
				if ((this._BillDate != value))
				{
					this.OnBillDateChanging(value);
					this.SendPropertyChanging();
					this._BillDate = value;
					this.SendPropertyChanged("BillDate");
					this.OnBillDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Milestone_MilestoneBillingLine", Storage="_MilestoneBillingLines", ThisKey="ID", OtherKey="MilestoneID")]
		public EntitySet<MilestoneBillingLine> MilestoneBillingLines
		{
			get
			{
				return this._MilestoneBillingLines;
			}
			set
			{
				this._MilestoneBillingLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Milestone_MilestoneLine", Storage="_MilestoneLines", ThisKey="ID", OtherKey="MilestoneID")]
		public EntitySet<MilestoneLine> MilestoneLines
		{
			get
			{
				return this._MilestoneLines;
			}
			set
			{
				this._MilestoneLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractLine_Milestone", Storage="_ContractLine", ThisKey="ContractLineID", OtherKey="ID", IsForeignKey=true)]
		public ContractLine ContractLine
		{
			get
			{
				return this._ContractLine.Entity;
			}
			set
			{
				ContractLine previousValue = this._ContractLine.Entity;
				if (((previousValue != value) 
							|| (this._ContractLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractLine.Entity = null;
						previousValue.Milestones.Remove(this);
					}
					this._ContractLine.Entity = value;
					if ((value != null))
					{
						value.Milestones.Add(this);
						this._ContractLineID = value.ID;
					}
					else
					{
						this._ContractLineID = default(int);
					}
					this.SendPropertyChanged("ContractLine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractMaintenance_Milestone", Storage="_ContractMaintenance", ThisKey="MaintenanceID", OtherKey="ID", IsForeignKey=true)]
		public ContractMaintenance ContractMaintenance
		{
			get
			{
				return this._ContractMaintenance.Entity;
			}
			set
			{
				ContractMaintenance previousValue = this._ContractMaintenance.Entity;
				if (((previousValue != value) 
							|| (this._ContractMaintenance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractMaintenance.Entity = null;
						previousValue.Milestones.Remove(this);
					}
					this._ContractMaintenance.Entity = value;
					if ((value != null))
					{
						value.Milestones.Add(this);
						this._MaintenanceID = value.ID;
					}
					else
					{
						this._MaintenanceID = default(int);
					}
					this.SendPropertyChanged("ContractMaintenance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Milestone", Storage="_Contract", ThisKey="ContractID", OtherKey="ID", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.Milestones.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.Milestones.Add(this);
						this._ContractID = value.ID;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MilestoneStatus_Milestone", Storage="_MilestoneStatus1", ThisKey="MilestoneStatusID", OtherKey="ID", IsForeignKey=true)]
		public MilestoneStatus MilestoneStatus1
		{
			get
			{
				return this._MilestoneStatus1.Entity;
			}
			set
			{
				MilestoneStatus previousValue = this._MilestoneStatus1.Entity;
				if (((previousValue != value) 
							|| (this._MilestoneStatus1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MilestoneStatus1.Entity = null;
						previousValue.Milestones.Remove(this);
					}
					this._MilestoneStatus1.Entity = value;
					if ((value != null))
					{
						value.Milestones.Add(this);
						this._MilestoneStatusID = value.ID;
					}
					else
					{
						this._MilestoneStatusID = default(int);
					}
					this.SendPropertyChanged("MilestoneStatus1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MilestoneBillingLines(MilestoneBillingLine entity)
		{
			this.SendPropertyChanging();
			entity.Milestone = this;
		}
		
		private void detach_MilestoneBillingLines(MilestoneBillingLine entity)
		{
			this.SendPropertyChanging();
			entity.Milestone = null;
		}
		
		private void attach_MilestoneLines(MilestoneLine entity)
		{
			this.SendPropertyChanging();
			entity.Milestone = this;
		}
		
		private void detach_MilestoneLines(MilestoneLine entity)
		{
			this.SendPropertyChanging();
			entity.Milestone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MilestoneBillingLines")]
	public partial class MilestoneBillingLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ContractID;
		
		private int _MilestoneID;
		
		private System.Nullable<int> _DescriptionID;
		
		private System.Nullable<int> _LineSequance;
		
		private string _LineText;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntityRef<Milestone> _Milestone;
		
		private EntityRef<Contract> _Contract;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnMilestoneIDChanging(int value);
    partial void OnMilestoneIDChanged();
    partial void OnDescriptionIDChanging(System.Nullable<int> value);
    partial void OnDescriptionIDChanged();
    partial void OnLineSequanceChanging(System.Nullable<int> value);
    partial void OnLineSequanceChanged();
    partial void OnLineTextChanging(string value);
    partial void OnLineTextChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public MilestoneBillingLine()
		{
			this._Milestone = default(EntityRef<Milestone>);
			this._Contract = default(EntityRef<Contract>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilestoneID", DbType="Int NOT NULL")]
		public int MilestoneID
		{
			get
			{
				return this._MilestoneID;
			}
			set
			{
				if ((this._MilestoneID != value))
				{
					if (this._Milestone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMilestoneIDChanging(value);
					this.SendPropertyChanging();
					this._MilestoneID = value;
					this.SendPropertyChanged("MilestoneID");
					this.OnMilestoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionID", DbType="Int")]
		public System.Nullable<int> DescriptionID
		{
			get
			{
				return this._DescriptionID;
			}
			set
			{
				if ((this._DescriptionID != value))
				{
					this.OnDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionID = value;
					this.SendPropertyChanged("DescriptionID");
					this.OnDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineSequance", DbType="Int")]
		public System.Nullable<int> LineSequance
		{
			get
			{
				return this._LineSequance;
			}
			set
			{
				if ((this._LineSequance != value))
				{
					this.OnLineSequanceChanging(value);
					this.SendPropertyChanging();
					this._LineSequance = value;
					this.SendPropertyChanged("LineSequance");
					this.OnLineSequanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineText", DbType="NVarChar(100)")]
		public string LineText
		{
			get
			{
				return this._LineText;
			}
			set
			{
				if ((this._LineText != value))
				{
					this.OnLineTextChanging(value);
					this.SendPropertyChanging();
					this._LineText = value;
					this.SendPropertyChanged("LineText");
					this.OnLineTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Milestone_MilestoneBillingLine", Storage="_Milestone", ThisKey="MilestoneID", OtherKey="ID", IsForeignKey=true)]
		public Milestone Milestone
		{
			get
			{
				return this._Milestone.Entity;
			}
			set
			{
				Milestone previousValue = this._Milestone.Entity;
				if (((previousValue != value) 
							|| (this._Milestone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Milestone.Entity = null;
						previousValue.MilestoneBillingLines.Remove(this);
					}
					this._Milestone.Entity = value;
					if ((value != null))
					{
						value.MilestoneBillingLines.Add(this);
						this._MilestoneID = value.ID;
					}
					else
					{
						this._MilestoneID = default(int);
					}
					this.SendPropertyChanged("Milestone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_MilestoneBillingLine", Storage="_Contract", ThisKey="ContractID", OtherKey="ID", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.MilestoneBillingLines.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.MilestoneBillingLines.Add(this);
						this._ContractID = value.ID;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MilestoneLines")]
	public partial class MilestoneLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MilestoneLineID;
		
		private System.Nullable<int> _ContractID;
		
		private System.Nullable<int> _ContractLineID;
		
		private System.Nullable<int> _MilestoneID;
		
		private System.Nullable<long> _MaintenanceID;
		
		private System.Nullable<decimal> _Percentage;
		
		private System.Nullable<decimal> _Value;
		
		private System.Nullable<int> _UpliftRate;
		
		private System.Nullable<int> _UpliftFixedRate;
		
		private System.Nullable<int> _UpliftID;
		
		private System.Nullable<int> _Uplift;
		
		private System.Nullable<bool> _QuoteRequired;
		
		private System.Nullable<bool> _QuoteApproval;
		
		private System.Nullable<decimal> _PreviousValue;
		
		private System.Nullable<int> _PreviousLine;
		
		private System.Nullable<int> _IndexRate;
		
		private System.Nullable<int> _DatabaseID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntityRef<Milestone> _Milestone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMilestoneLineIDChanging(System.Nullable<int> value);
    partial void OnMilestoneLineIDChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    partial void OnContractLineIDChanging(System.Nullable<int> value);
    partial void OnContractLineIDChanged();
    partial void OnMilestoneIDChanging(System.Nullable<int> value);
    partial void OnMilestoneIDChanged();
    partial void OnMaintenanceIDChanging(System.Nullable<long> value);
    partial void OnMaintenanceIDChanged();
    partial void OnPercentageChanging(System.Nullable<decimal> value);
    partial void OnPercentageChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnUpliftRateChanging(System.Nullable<int> value);
    partial void OnUpliftRateChanged();
    partial void OnUpliftFixedRateChanging(System.Nullable<int> value);
    partial void OnUpliftFixedRateChanged();
    partial void OnUpliftIDChanging(System.Nullable<int> value);
    partial void OnUpliftIDChanged();
    partial void OnUpliftChanging(System.Nullable<int> value);
    partial void OnUpliftChanged();
    partial void OnQuoteRequiredChanging(System.Nullable<bool> value);
    partial void OnQuoteRequiredChanged();
    partial void OnQuoteApprovalChanging(System.Nullable<bool> value);
    partial void OnQuoteApprovalChanged();
    partial void OnPreviousValueChanging(System.Nullable<decimal> value);
    partial void OnPreviousValueChanged();
    partial void OnPreviousLineChanging(System.Nullable<int> value);
    partial void OnPreviousLineChanged();
    partial void OnIndexRateChanging(System.Nullable<int> value);
    partial void OnIndexRateChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public MilestoneLine()
		{
			this._Milestone = default(EntityRef<Milestone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilestoneLineID", DbType="Int")]
		public System.Nullable<int> MilestoneLineID
		{
			get
			{
				return this._MilestoneLineID;
			}
			set
			{
				if ((this._MilestoneLineID != value))
				{
					this.OnMilestoneLineIDChanging(value);
					this.SendPropertyChanging();
					this._MilestoneLineID = value;
					this.SendPropertyChanged("MilestoneLineID");
					this.OnMilestoneLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractLineID", DbType="Int")]
		public System.Nullable<int> ContractLineID
		{
			get
			{
				return this._ContractLineID;
			}
			set
			{
				if ((this._ContractLineID != value))
				{
					this.OnContractLineIDChanging(value);
					this.SendPropertyChanging();
					this._ContractLineID = value;
					this.SendPropertyChanged("ContractLineID");
					this.OnContractLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilestoneID", DbType="Int")]
		public System.Nullable<int> MilestoneID
		{
			get
			{
				return this._MilestoneID;
			}
			set
			{
				if ((this._MilestoneID != value))
				{
					if (this._Milestone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMilestoneIDChanging(value);
					this.SendPropertyChanging();
					this._MilestoneID = value;
					this.SendPropertyChanged("MilestoneID");
					this.OnMilestoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceID", DbType="BigInt")]
		public System.Nullable<long> MaintenanceID
		{
			get
			{
				return this._MaintenanceID;
			}
			set
			{
				if ((this._MaintenanceID != value))
				{
					this.OnMaintenanceIDChanging(value);
					this.SendPropertyChanging();
					this._MaintenanceID = value;
					this.SendPropertyChanged("MaintenanceID");
					this.OnMaintenanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpliftRate", DbType="Int")]
		public System.Nullable<int> UpliftRate
		{
			get
			{
				return this._UpliftRate;
			}
			set
			{
				if ((this._UpliftRate != value))
				{
					this.OnUpliftRateChanging(value);
					this.SendPropertyChanging();
					this._UpliftRate = value;
					this.SendPropertyChanged("UpliftRate");
					this.OnUpliftRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpliftFixedRate", DbType="Int")]
		public System.Nullable<int> UpliftFixedRate
		{
			get
			{
				return this._UpliftFixedRate;
			}
			set
			{
				if ((this._UpliftFixedRate != value))
				{
					this.OnUpliftFixedRateChanging(value);
					this.SendPropertyChanging();
					this._UpliftFixedRate = value;
					this.SendPropertyChanged("UpliftFixedRate");
					this.OnUpliftFixedRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpliftID", DbType="Int")]
		public System.Nullable<int> UpliftID
		{
			get
			{
				return this._UpliftID;
			}
			set
			{
				if ((this._UpliftID != value))
				{
					this.OnUpliftIDChanging(value);
					this.SendPropertyChanging();
					this._UpliftID = value;
					this.SendPropertyChanged("UpliftID");
					this.OnUpliftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uplift", DbType="Int")]
		public System.Nullable<int> Uplift
		{
			get
			{
				return this._Uplift;
			}
			set
			{
				if ((this._Uplift != value))
				{
					this.OnUpliftChanging(value);
					this.SendPropertyChanging();
					this._Uplift = value;
					this.SendPropertyChanged("Uplift");
					this.OnUpliftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteRequired", DbType="Bit")]
		public System.Nullable<bool> QuoteRequired
		{
			get
			{
				return this._QuoteRequired;
			}
			set
			{
				if ((this._QuoteRequired != value))
				{
					this.OnQuoteRequiredChanging(value);
					this.SendPropertyChanging();
					this._QuoteRequired = value;
					this.SendPropertyChanged("QuoteRequired");
					this.OnQuoteRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteApproval", DbType="Bit")]
		public System.Nullable<bool> QuoteApproval
		{
			get
			{
				return this._QuoteApproval;
			}
			set
			{
				if ((this._QuoteApproval != value))
				{
					this.OnQuoteApprovalChanging(value);
					this.SendPropertyChanging();
					this._QuoteApproval = value;
					this.SendPropertyChanged("QuoteApproval");
					this.OnQuoteApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousValue", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> PreviousValue
		{
			get
			{
				return this._PreviousValue;
			}
			set
			{
				if ((this._PreviousValue != value))
				{
					this.OnPreviousValueChanging(value);
					this.SendPropertyChanging();
					this._PreviousValue = value;
					this.SendPropertyChanged("PreviousValue");
					this.OnPreviousValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousLine", DbType="Int")]
		public System.Nullable<int> PreviousLine
		{
			get
			{
				return this._PreviousLine;
			}
			set
			{
				if ((this._PreviousLine != value))
				{
					this.OnPreviousLineChanging(value);
					this.SendPropertyChanging();
					this._PreviousLine = value;
					this.SendPropertyChanged("PreviousLine");
					this.OnPreviousLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexRate", DbType="Int")]
		public System.Nullable<int> IndexRate
		{
			get
			{
				return this._IndexRate;
			}
			set
			{
				if ((this._IndexRate != value))
				{
					this.OnIndexRateChanging(value);
					this.SendPropertyChanging();
					this._IndexRate = value;
					this.SendPropertyChanged("IndexRate");
					this.OnIndexRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Milestone_MilestoneLine", Storage="_Milestone", ThisKey="MilestoneID", OtherKey="ID", IsForeignKey=true)]
		public Milestone Milestone
		{
			get
			{
				return this._Milestone.Entity;
			}
			set
			{
				Milestone previousValue = this._Milestone.Entity;
				if (((previousValue != value) 
							|| (this._Milestone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Milestone.Entity = null;
						previousValue.MilestoneLines.Remove(this);
					}
					this._Milestone.Entity = value;
					if ((value != null))
					{
						value.MilestoneLines.Add(this);
						this._MilestoneID = value.ID;
					}
					else
					{
						this._MilestoneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Milestone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MilestoneStatus")]
	public partial class MilestoneStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StatusName;
		
		private string _Description;
		
		private System.Nullable<int> _Order;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<Milestone> _Milestones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public MilestoneStatus()
		{
			this._Milestones = new EntitySet<Milestone>(new Action<Milestone>(this.attach_Milestones), new Action<Milestone>(this.detach_Milestones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(4)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MilestoneStatus_Milestone", Storage="_Milestones", ThisKey="ID", OtherKey="MilestoneStatusID")]
		public EntitySet<Milestone> Milestones
		{
			get
			{
				return this._Milestones;
			}
			set
			{
				this._Milestones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Milestones(Milestone entity)
		{
			this.SendPropertyChanging();
			entity.MilestoneStatus1 = this;
		}
		
		private void detach_Milestones(Milestone entity)
		{
			this.SendPropertyChanging();
			entity.MilestoneStatus1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAAccountCode")]
	public partial class OAAccountCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AccountID;
		
		private string _AccountName;
		
		private int _CompanyID;
		
		private bool _IsDeleted;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private EntitySet<ContractLine> _ContractLines;
		
		private EntitySet<OAActivityCode> _OAActivityCodes;
		
		private EntityRef<OACompany> _OACompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    #endregion
		
		public OAAccountCode()
		{
			this._ContractLines = new EntitySet<ContractLine>(new Action<ContractLine>(this.attach_ContractLines), new Action<ContractLine>(this.detach_ContractLines));
			this._OAActivityCodes = new EntitySet<OAActivityCode>(new Action<OAActivityCode>(this.attach_OAActivityCodes), new Action<OAActivityCode>(this.detach_OAActivityCodes));
			this._OACompany = default(EntityRef<OACompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NVarChar(60)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(160)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAAccountCode_ContractLine", Storage="_ContractLines", ThisKey="ID", OtherKey="AccountCodeID")]
		public EntitySet<ContractLine> ContractLines
		{
			get
			{
				return this._ContractLines;
			}
			set
			{
				this._ContractLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAAccountCode_OAActivityCode", Storage="_OAActivityCodes", ThisKey="ID", OtherKey="AccountCodeID")]
		public EntitySet<OAActivityCode> OAActivityCodes
		{
			get
			{
				return this._OAActivityCodes;
			}
			set
			{
				this._OAActivityCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OAAccountCode", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.OAAccountCodes.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.OAAccountCodes.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.OAAccountCode = this;
		}
		
		private void detach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.OAAccountCode = null;
		}
		
		private void attach_OAActivityCodes(OAActivityCode entity)
		{
			this.SendPropertyChanging();
			entity.OAAccountCode = this;
		}
		
		private void detach_OAActivityCodes(OAActivityCode entity)
		{
			this.SendPropertyChanging();
			entity.OAAccountCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAActivityCode")]
	public partial class OAActivityCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ActivityID;
		
		private string _ActivityName;
		
		private string _AccountCode;
		
		private System.Nullable<int> _AccountCodeID;
		
		private int _CompanyID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<ContractLine> _ContractLines;
		
		private EntityRef<OAAccountCode> _OAAccountCode;
		
		private EntityRef<OACompany> _OACompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActivityIDChanging(string value);
    partial void OnActivityIDChanged();
    partial void OnActivityNameChanging(string value);
    partial void OnActivityNameChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountCodeIDChanging(System.Nullable<int> value);
    partial void OnAccountCodeIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public OAActivityCode()
		{
			this._ContractLines = new EntitySet<ContractLine>(new Action<ContractLine>(this.attach_ContractLines), new Action<ContractLine>(this.detach_ContractLines));
			this._OAAccountCode = default(EntityRef<OAAccountCode>);
			this._OACompany = default(EntityRef<OACompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="NVarChar(60)")]
		public string ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityName", DbType="NVarChar(160)")]
		public string ActivityName
		{
			get
			{
				return this._ActivityName;
			}
			set
			{
				if ((this._ActivityName != value))
				{
					this.OnActivityNameChanging(value);
					this.SendPropertyChanging();
					this._ActivityName = value;
					this.SendPropertyChanged("ActivityName");
					this.OnActivityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(60)")]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCodeID", DbType="Int")]
		public System.Nullable<int> AccountCodeID
		{
			get
			{
				return this._AccountCodeID;
			}
			set
			{
				if ((this._AccountCodeID != value))
				{
					if (this._OAAccountCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountCodeIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCodeID = value;
					this.SendPropertyChanged("AccountCodeID");
					this.OnAccountCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAActivityCode_ContractLine", Storage="_ContractLines", ThisKey="ID", OtherKey="ActivityCodeID")]
		public EntitySet<ContractLine> ContractLines
		{
			get
			{
				return this._ContractLines;
			}
			set
			{
				this._ContractLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAAccountCode_OAActivityCode", Storage="_OAAccountCode", ThisKey="AccountCodeID", OtherKey="ID", IsForeignKey=true)]
		public OAAccountCode OAAccountCode
		{
			get
			{
				return this._OAAccountCode.Entity;
			}
			set
			{
				OAAccountCode previousValue = this._OAAccountCode.Entity;
				if (((previousValue != value) 
							|| (this._OAAccountCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OAAccountCode.Entity = null;
						previousValue.OAActivityCodes.Remove(this);
					}
					this._OAAccountCode.Entity = value;
					if ((value != null))
					{
						value.OAActivityCodes.Add(this);
						this._AccountCodeID = value.ID;
					}
					else
					{
						this._AccountCodeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OAAccountCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OAActivityCode", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.OAActivityCodes.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.OAActivityCodes.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.OAActivityCode = this;
		}
		
		private void detach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.OAActivityCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OACompany")]
	public partial class OACompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CompanyName;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<BusinessPartner> _BusinessPartners;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<CustomerComment> _CustomerComments;
		
		private EntitySet<Division> _Divisions;
		
		private EntitySet<OAAccountCode> _OAAccountCodes;
		
		private EntitySet<OAActivityCode> _OAActivityCodes;
		
		private EntitySet<OACostCentre> _OACostCentres;
		
		private EntitySet<OACustomer> _OACustomers;
		
		private EntitySet<OAJobCode> _OAJobCodes;
		
		private EntitySet<OAPeriod> _OAPeriods;
		
		private EntitySet<P_LMapping> _P_LMappings;
		
		private EntitySet<UserCompanyMapping> _UserCompanyMappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public OACompany()
		{
			this._BusinessPartners = new EntitySet<BusinessPartner>(new Action<BusinessPartner>(this.attach_BusinessPartners), new Action<BusinessPartner>(this.detach_BusinessPartners));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._CustomerComments = new EntitySet<CustomerComment>(new Action<CustomerComment>(this.attach_CustomerComments), new Action<CustomerComment>(this.detach_CustomerComments));
			this._Divisions = new EntitySet<Division>(new Action<Division>(this.attach_Divisions), new Action<Division>(this.detach_Divisions));
			this._OAAccountCodes = new EntitySet<OAAccountCode>(new Action<OAAccountCode>(this.attach_OAAccountCodes), new Action<OAAccountCode>(this.detach_OAAccountCodes));
			this._OAActivityCodes = new EntitySet<OAActivityCode>(new Action<OAActivityCode>(this.attach_OAActivityCodes), new Action<OAActivityCode>(this.detach_OAActivityCodes));
			this._OACostCentres = new EntitySet<OACostCentre>(new Action<OACostCentre>(this.attach_OACostCentres), new Action<OACostCentre>(this.detach_OACostCentres));
			this._OACustomers = new EntitySet<OACustomer>(new Action<OACustomer>(this.attach_OACustomers), new Action<OACustomer>(this.detach_OACustomers));
			this._OAJobCodes = new EntitySet<OAJobCode>(new Action<OAJobCode>(this.attach_OAJobCodes), new Action<OAJobCode>(this.detach_OAJobCodes));
			this._OAPeriods = new EntitySet<OAPeriod>(new Action<OAPeriod>(this.attach_OAPeriods), new Action<OAPeriod>(this.detach_OAPeriods));
			this._P_LMappings = new EntitySet<P_LMapping>(new Action<P_LMapping>(this.attach_P_LMappings), new Action<P_LMapping>(this.detach_P_LMappings));
			this._UserCompanyMappings = new EntitySet<UserCompanyMapping>(new Action<UserCompanyMapping>(this.attach_UserCompanyMappings), new Action<UserCompanyMapping>(this.detach_UserCompanyMappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(120)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_BusinessPartner", Storage="_BusinessPartners", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<BusinessPartner> BusinessPartners
		{
			get
			{
				return this._BusinessPartners;
			}
			set
			{
				this._BusinessPartners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_CustomerComment", Storage="_CustomerComments", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<CustomerComment> CustomerComments
		{
			get
			{
				return this._CustomerComments;
			}
			set
			{
				this._CustomerComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_Division", Storage="_Divisions", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Division> Divisions
		{
			get
			{
				return this._Divisions;
			}
			set
			{
				this._Divisions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OAAccountCode", Storage="_OAAccountCodes", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<OAAccountCode> OAAccountCodes
		{
			get
			{
				return this._OAAccountCodes;
			}
			set
			{
				this._OAAccountCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OAActivityCode", Storage="_OAActivityCodes", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<OAActivityCode> OAActivityCodes
		{
			get
			{
				return this._OAActivityCodes;
			}
			set
			{
				this._OAActivityCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OACostCentre", Storage="_OACostCentres", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<OACostCentre> OACostCentres
		{
			get
			{
				return this._OACostCentres;
			}
			set
			{
				this._OACostCentres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OACustomer", Storage="_OACustomers", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<OACustomer> OACustomers
		{
			get
			{
				return this._OACustomers;
			}
			set
			{
				this._OACustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OAJobCode", Storage="_OAJobCodes", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<OAJobCode> OAJobCodes
		{
			get
			{
				return this._OAJobCodes;
			}
			set
			{
				this._OAJobCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OAPeriod", Storage="_OAPeriods", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<OAPeriod> OAPeriods
		{
			get
			{
				return this._OAPeriods;
			}
			set
			{
				this._OAPeriods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_P_LMapping", Storage="_P_LMappings", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<P_LMapping> P_LMappings
		{
			get
			{
				return this._P_LMappings;
			}
			set
			{
				this._P_LMappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_UserCompanyMapping", Storage="_UserCompanyMappings", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<UserCompanyMapping> UserCompanyMappings
		{
			get
			{
				return this._UserCompanyMappings;
			}
			set
			{
				this._UserCompanyMappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessPartners(BusinessPartner entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_BusinessPartners(BusinessPartner entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_CustomerComments(CustomerComment entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_CustomerComments(CustomerComment entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_Divisions(Division entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_Divisions(Division entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_OAAccountCodes(OAAccountCode entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_OAAccountCodes(OAAccountCode entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_OAActivityCodes(OAActivityCode entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_OAActivityCodes(OAActivityCode entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_OACostCentres(OACostCentre entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_OACostCentres(OACostCentre entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_OACustomers(OACustomer entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_OACustomers(OACustomer entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_OAJobCodes(OAJobCode entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_OAJobCodes(OAJobCode entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_OAPeriods(OAPeriod entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_OAPeriods(OAPeriod entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_P_LMappings(P_LMapping entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_P_LMappings(P_LMapping entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
		
		private void attach_UserCompanyMappings(UserCompanyMapping entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = this;
		}
		
		private void detach_UserCompanyMappings(UserCompanyMapping entity)
		{
			this.SendPropertyChanging();
			entity.OACompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OACostCentre")]
	public partial class OACostCentre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CostCentreID;
		
		private string _CostCentreName;
		
		private int _CompanyID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<ContractLine> _ContractLines;
		
		private EntitySet<P_LMapping> _P_LMappings;
		
		private EntityRef<OACompany> _OACompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCostCentreIDChanging(string value);
    partial void OnCostCentreIDChanged();
    partial void OnCostCentreNameChanging(string value);
    partial void OnCostCentreNameChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public OACostCentre()
		{
			this._ContractLines = new EntitySet<ContractLine>(new Action<ContractLine>(this.attach_ContractLines), new Action<ContractLine>(this.detach_ContractLines));
			this._P_LMappings = new EntitySet<P_LMapping>(new Action<P_LMapping>(this.attach_P_LMappings), new Action<P_LMapping>(this.detach_P_LMappings));
			this._OACompany = default(EntityRef<OACompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCentreID", DbType="NVarChar(60)")]
		public string CostCentreID
		{
			get
			{
				return this._CostCentreID;
			}
			set
			{
				if ((this._CostCentreID != value))
				{
					this.OnCostCentreIDChanging(value);
					this.SendPropertyChanging();
					this._CostCentreID = value;
					this.SendPropertyChanged("CostCentreID");
					this.OnCostCentreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCentreName", DbType="NVarChar(160)")]
		public string CostCentreName
		{
			get
			{
				return this._CostCentreName;
			}
			set
			{
				if ((this._CostCentreName != value))
				{
					this.OnCostCentreNameChanging(value);
					this.SendPropertyChanging();
					this._CostCentreName = value;
					this.SendPropertyChanged("CostCentreName");
					this.OnCostCentreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACostCentre_ContractLine", Storage="_ContractLines", ThisKey="ID", OtherKey="CostCentreID")]
		public EntitySet<ContractLine> ContractLines
		{
			get
			{
				return this._ContractLines;
			}
			set
			{
				this._ContractLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACostCentre_P_LMapping", Storage="_P_LMappings", ThisKey="ID", OtherKey="CostCentreID")]
		public EntitySet<P_LMapping> P_LMappings
		{
			get
			{
				return this._P_LMappings;
			}
			set
			{
				this._P_LMappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OACostCentre", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.OACostCentres.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.OACostCentres.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.OACostCentre = this;
		}
		
		private void detach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.OACostCentre = null;
		}
		
		private void attach_P_LMappings(P_LMapping entity)
		{
			this.SendPropertyChanging();
			entity.OACostCentre = this;
		}
		
		private void detach_P_LMappings(P_LMapping entity)
		{
			this.SendPropertyChanging();
			entity.OACostCentre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OACustomer")]
	public partial class OACustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CustomerID;
		
		private string _CustomerName;
		
		private int _CompanyID;
		
		private string _VatCode;
		
		private bool _IsDeleted;
		
		private string _ShortName;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private string _CurrencyID;
		
		private EntitySet<BusinessPartner> _BusinessPartners;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<CustomerComment> _CustomerComments;
		
		private EntitySet<OAJobCode> _OAJobCodes;
		
		private EntityRef<OACompany> _OACompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnVatCodeChanging(string value);
    partial void OnVatCodeChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    partial void OnCurrencyIDChanging(string value);
    partial void OnCurrencyIDChanged();
    #endregion
		
		public OACustomer()
		{
			this._BusinessPartners = new EntitySet<BusinessPartner>(new Action<BusinessPartner>(this.attach_BusinessPartners), new Action<BusinessPartner>(this.detach_BusinessPartners));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._CustomerComments = new EntitySet<CustomerComment>(new Action<CustomerComment>(this.attach_CustomerComments), new Action<CustomerComment>(this.detach_CustomerComments));
			this._OAJobCodes = new EntitySet<OAJobCode>(new Action<OAJobCode>(this.attach_OAJobCodes), new Action<OAJobCode>(this.detach_OAJobCodes));
			this._OACompany = default(EntityRef<OACompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(40)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(160)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatCode", DbType="NVarChar(100)")]
		public string VatCode
		{
			get
			{
				return this._VatCode;
			}
			set
			{
				if ((this._VatCode != value))
				{
					this.OnVatCodeChanging(value);
					this.SendPropertyChanging();
					this._VatCode = value;
					this.SendPropertyChanged("VatCode");
					this.OnVatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(60)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="NVarChar(8)")]
		public string CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACustomer_BusinessPartner", Storage="_BusinessPartners", ThisKey="ID", OtherKey="InvoiceCustomerID")]
		public EntitySet<BusinessPartner> BusinessPartners
		{
			get
			{
				return this._BusinessPartners;
			}
			set
			{
				this._BusinessPartners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACustomer_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="InvoiceCustomerID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACustomer_CustomerComment", Storage="_CustomerComments", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<CustomerComment> CustomerComments
		{
			get
			{
				return this._CustomerComments;
			}
			set
			{
				this._CustomerComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACustomer_OAJobCode", Storage="_OAJobCodes", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<OAJobCode> OAJobCodes
		{
			get
			{
				return this._OAJobCodes;
			}
			set
			{
				this._OAJobCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OACustomer", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.OACustomers.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.OACustomers.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessPartners(BusinessPartner entity)
		{
			this.SendPropertyChanging();
			entity.OACustomer = this;
		}
		
		private void detach_BusinessPartners(BusinessPartner entity)
		{
			this.SendPropertyChanging();
			entity.OACustomer = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.OACustomer = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.OACustomer = null;
		}
		
		private void attach_CustomerComments(CustomerComment entity)
		{
			this.SendPropertyChanging();
			entity.OACustomer = this;
		}
		
		private void detach_CustomerComments(CustomerComment entity)
		{
			this.SendPropertyChanging();
			entity.OACustomer = null;
		}
		
		private void attach_OAJobCodes(OAJobCode entity)
		{
			this.SendPropertyChanging();
			entity.OACustomer = this;
		}
		
		private void detach_OAJobCodes(OAJobCode entity)
		{
			this.SendPropertyChanging();
			entity.OACustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAJobCode")]
	public partial class OAJobCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _JobCodeID;
		
		private string _JobCodeName;
		
		private int _CompanyID;
		
		private bool _IsDeleted;
		
		private string _Customer;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<ContractLine> _ContractLines;
		
		private EntityRef<OACompany> _OACompany;
		
		private EntityRef<OACustomer> _OACustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJobCodeIDChanging(string value);
    partial void OnJobCodeIDChanged();
    partial void OnJobCodeNameChanging(string value);
    partial void OnJobCodeNameChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public OAJobCode()
		{
			this._ContractLines = new EntitySet<ContractLine>(new Action<ContractLine>(this.attach_ContractLines), new Action<ContractLine>(this.detach_ContractLines));
			this._OACompany = default(EntityRef<OACompany>);
			this._OACustomer = default(EntityRef<OACustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCodeID", DbType="NVarChar(100)")]
		public string JobCodeID
		{
			get
			{
				return this._JobCodeID;
			}
			set
			{
				if ((this._JobCodeID != value))
				{
					this.OnJobCodeIDChanging(value);
					this.SendPropertyChanging();
					this._JobCodeID = value;
					this.SendPropertyChanged("JobCodeID");
					this.OnJobCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCodeName", DbType="NVarChar(160)")]
		public string JobCodeName
		{
			get
			{
				return this._JobCodeName;
			}
			set
			{
				if ((this._JobCodeName != value))
				{
					this.OnJobCodeNameChanging(value);
					this.SendPropertyChanging();
					this._JobCodeName = value;
					this.SendPropertyChanged("JobCodeName");
					this.OnJobCodeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="NVarChar(40)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._OACustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAJobCode_ContractLine", Storage="_ContractLines", ThisKey="ID", OtherKey="JobCodeID")]
		public EntitySet<ContractLine> ContractLines
		{
			get
			{
				return this._ContractLines;
			}
			set
			{
				this._ContractLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OAJobCode", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.OAJobCodes.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.OAJobCodes.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACustomer_OAJobCode", Storage="_OACustomer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public OACustomer OACustomer
		{
			get
			{
				return this._OACustomer.Entity;
			}
			set
			{
				OACustomer previousValue = this._OACustomer.Entity;
				if (((previousValue != value) 
							|| (this._OACustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACustomer.Entity = null;
						previousValue.OAJobCodes.Remove(this);
					}
					this._OACustomer.Entity = value;
					if ((value != null))
					{
						value.OAJobCodes.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OACustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.OAJobCode = this;
		}
		
		private void detach_ContractLines(ContractLine entity)
		{
			this.SendPropertyChanging();
			entity.OAJobCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAPeriod")]
	public partial class OAPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CompanyID;
		
		private bool _IsDeleted;
		
		private string _NotesID;
		
		private decimal _PYear;
		
		private string _PDates;
		
		private string _YearDescription;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _NoOfWeeks;
		
		private string _NoOfDays;
		
		private int _MaxPeriod;
		
		private string _PeriodName;
		
		private EntityRef<OACompany> _OACompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnNotesIDChanging(string value);
    partial void OnNotesIDChanged();
    partial void OnPYearChanging(decimal value);
    partial void OnPYearChanged();
    partial void OnPDatesChanging(string value);
    partial void OnPDatesChanged();
    partial void OnYearDescriptionChanging(string value);
    partial void OnYearDescriptionChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnNoOfWeeksChanging(string value);
    partial void OnNoOfWeeksChanged();
    partial void OnNoOfDaysChanging(string value);
    partial void OnNoOfDaysChanged();
    partial void OnMaxPeriodChanging(int value);
    partial void OnMaxPeriodChanged();
    partial void OnPeriodNameChanging(string value);
    partial void OnPeriodNameChanged();
    #endregion
		
		public OAPeriod()
		{
			this._OACompany = default(EntityRef<OACompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotesID", DbType="NVarChar(48)")]
		public string NotesID
		{
			get
			{
				return this._NotesID;
			}
			set
			{
				if ((this._NotesID != value))
				{
					this.OnNotesIDChanging(value);
					this.SendPropertyChanging();
					this._NotesID = value;
					this.SendPropertyChanged("NotesID");
					this.OnNotesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PYear", DbType="Decimal(4,0) NOT NULL")]
		public decimal PYear
		{
			get
			{
				return this._PYear;
			}
			set
			{
				if ((this._PYear != value))
				{
					this.OnPYearChanging(value);
					this.SendPropertyChanging();
					this._PYear = value;
					this.SendPropertyChanged("PYear");
					this.OnPYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDates", DbType="NVarChar(4000)")]
		public string PDates
		{
			get
			{
				return this._PDates;
			}
			set
			{
				if ((this._PDates != value))
				{
					this.OnPDatesChanging(value);
					this.SendPropertyChanging();
					this._PDates = value;
					this.SendPropertyChanged("PDates");
					this.OnPDatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearDescription", DbType="NVarChar(100)")]
		public string YearDescription
		{
			get
			{
				return this._YearDescription;
			}
			set
			{
				if ((this._YearDescription != value))
				{
					this.OnYearDescriptionChanging(value);
					this.SendPropertyChanging();
					this._YearDescription = value;
					this.SendPropertyChanged("YearDescription");
					this.OnYearDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfWeeks", DbType="NVarChar(300)")]
		public string NoOfWeeks
		{
			get
			{
				return this._NoOfWeeks;
			}
			set
			{
				if ((this._NoOfWeeks != value))
				{
					this.OnNoOfWeeksChanging(value);
					this.SendPropertyChanging();
					this._NoOfWeeks = value;
					this.SendPropertyChanged("NoOfWeeks");
					this.OnNoOfWeeksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfDays", DbType="NVarChar(300)")]
		public string NoOfDays
		{
			get
			{
				return this._NoOfDays;
			}
			set
			{
				if ((this._NoOfDays != value))
				{
					this.OnNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NoOfDays = value;
					this.SendPropertyChanged("NoOfDays");
					this.OnNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPeriod", DbType="Int NOT NULL")]
		public int MaxPeriod
		{
			get
			{
				return this._MaxPeriod;
			}
			set
			{
				if ((this._MaxPeriod != value))
				{
					this.OnMaxPeriodChanging(value);
					this.SendPropertyChanging();
					this._MaxPeriod = value;
					this.SendPropertyChanged("MaxPeriod");
					this.OnMaxPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodName", DbType="NVarChar(4000)")]
		public string PeriodName
		{
			get
			{
				return this._PeriodName;
			}
			set
			{
				if ((this._PeriodName != value))
				{
					this.OnPeriodNameChanging(value);
					this.SendPropertyChanging();
					this._PeriodName = value;
					this.SendPropertyChanged("PeriodName");
					this.OnPeriodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_OAPeriod", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.OAPeriods.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.OAPeriods.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OATransaction")]
	public partial class OATransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CompanyId;
		
		private int _MilestoneId;
		
		private string _InvoiceNo;
		
		private string _RecordType;
		
		private string _AccountId;
		
		private string _DocumentId;
		
		private System.Nullable<System.DateTime> _DocumentDate;
		
		private decimal _DocumentNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnMilestoneIdChanging(int value);
    partial void OnMilestoneIdChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnRecordTypeChanging(string value);
    partial void OnRecordTypeChanged();
    partial void OnAccountIdChanging(string value);
    partial void OnAccountIdChanged();
    partial void OnDocumentIdChanging(string value);
    partial void OnDocumentIdChanged();
    partial void OnDocumentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentDateChanged();
    partial void OnDocumentNumberChanging(decimal value);
    partial void OnDocumentNumberChanged();
    #endregion
		
		public OATransaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilestoneId", DbType="Int NOT NULL")]
		public int MilestoneId
		{
			get
			{
				return this._MilestoneId;
			}
			set
			{
				if ((this._MilestoneId != value))
				{
					this.OnMilestoneIdChanging(value);
					this.SendPropertyChanging();
					this._MilestoneId = value;
					this.SendPropertyChanged("MilestoneId");
					this.OnMilestoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordType", DbType="NVarChar(32)")]
		public string RecordType
		{
			get
			{
				return this._RecordType;
			}
			set
			{
				if ((this._RecordType != value))
				{
					this.OnRecordTypeChanging(value);
					this.SendPropertyChanging();
					this._RecordType = value;
					this.SendPropertyChanged("RecordType");
					this.OnRecordTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="NVarChar(60)")]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentId", DbType="NVarChar(24)")]
		public string DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocumentDate
		{
			get
			{
				return this._DocumentDate;
			}
			set
			{
				if ((this._DocumentDate != value))
				{
					this.OnDocumentDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentDate = value;
					this.SendPropertyChanged("DocumentDate");
					this.OnDocumentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="Decimal(18,0) NOT NULL")]
		public decimal DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[P&LMappings]")]
	public partial class P_LMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CostCentreID;
		
		private string _P_L;
		
		private int _CompanyID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntityRef<OACompany> _OACompany;
		
		private EntityRef<OACostCentre> _OACostCentre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCostCentreIDChanging(int value);
    partial void OnCostCentreIDChanged();
    partial void OnP_LChanging(string value);
    partial void OnP_LChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public P_LMapping()
		{
			this._OACompany = default(EntityRef<OACompany>);
			this._OACostCentre = default(EntityRef<OACostCentre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCentreID", DbType="Int NOT NULL")]
		public int CostCentreID
		{
			get
			{
				return this._CostCentreID;
			}
			set
			{
				if ((this._CostCentreID != value))
				{
					if (this._OACostCentre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostCentreIDChanging(value);
					this.SendPropertyChanging();
					this._CostCentreID = value;
					this.SendPropertyChanged("CostCentreID");
					this.OnCostCentreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[P&L]", Storage="_P_L", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string P_L
		{
			get
			{
				return this._P_L;
			}
			set
			{
				if ((this._P_L != value))
				{
					this.OnP_LChanging(value);
					this.SendPropertyChanging();
					this._P_L = value;
					this.SendPropertyChanged("P_L");
					this.OnP_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_P_LMapping", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.P_LMappings.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.P_LMappings.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACostCentre_P_LMapping", Storage="_OACostCentre", ThisKey="CostCentreID", OtherKey="ID", IsForeignKey=true)]
		public OACostCentre OACostCentre
		{
			get
			{
				return this._OACostCentre.Entity;
			}
			set
			{
				OACostCentre previousValue = this._OACostCentre.Entity;
				if (((previousValue != value) 
							|| (this._OACostCentre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACostCentre.Entity = null;
						previousValue.P_LMappings.Remove(this);
					}
					this._OACostCentre.Entity = value;
					if ((value != null))
					{
						value.P_LMappings.Add(this);
						this._CostCentreID = value.ID;
					}
					else
					{
						this._CostCentreID = default(int);
					}
					this.SendPropertyChanged("OACostCentre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductRange")]
	public partial class ProductRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CoreProduct;
		
		private string _StartRange;
		
		private string _EndRange;
		
		private System.Nullable<int> _DatabaseID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCoreProductChanging(string value);
    partial void OnCoreProductChanged();
    partial void OnStartRangeChanging(string value);
    partial void OnStartRangeChanged();
    partial void OnEndRangeChanging(string value);
    partial void OnEndRangeChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    #endregion
		
		public ProductRange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoreProduct", DbType="NVarChar(10)")]
		public string CoreProduct
		{
			get
			{
				return this._CoreProduct;
			}
			set
			{
				if ((this._CoreProduct != value))
				{
					this.OnCoreProductChanging(value);
					this.SendPropertyChanging();
					this._CoreProduct = value;
					this.SendPropertyChanged("CoreProduct");
					this.OnCoreProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartRange", DbType="NVarChar(10)")]
		public string StartRange
		{
			get
			{
				return this._StartRange;
			}
			set
			{
				if ((this._StartRange != value))
				{
					this.OnStartRangeChanging(value);
					this.SendPropertyChanging();
					this._StartRange = value;
					this.SendPropertyChanged("StartRange");
					this.OnStartRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndRange", DbType="NVarChar(10)")]
		public string EndRange
		{
			get
			{
				return this._EndRange;
			}
			set
			{
				if ((this._EndRange != value))
				{
					this.OnEndRangeChanging(value);
					this.SendPropertyChanging();
					this._EndRange = value;
					this.SendPropertyChanged("EndRange");
					this.OnEndRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldProductID;
		
		private string _ProductName;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<ContractMaintenance> _ContractMaintenances;
		
		private EntitySet<SubProduct> _SubProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldProductIDChanging(System.Nullable<int> value);
    partial void OnOldProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Product()
		{
			this._ContractMaintenances = new EntitySet<ContractMaintenance>(new Action<ContractMaintenance>(this.attach_ContractMaintenances), new Action<ContractMaintenance>(this.detach_ContractMaintenances));
			this._SubProducts = new EntitySet<SubProduct>(new Action<SubProduct>(this.attach_SubProducts), new Action<SubProduct>(this.detach_SubProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldProductID", DbType="Int")]
		public System.Nullable<int> OldProductID
		{
			get
			{
				return this._OldProductID;
			}
			set
			{
				if ((this._OldProductID != value))
				{
					this.OnOldProductIDChanging(value);
					this.SendPropertyChanging();
					this._OldProductID = value;
					this.SendPropertyChanged("OldProductID");
					this.OnOldProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ContractMaintenance", Storage="_ContractMaintenances", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<ContractMaintenance> ContractMaintenances
		{
			get
			{
				return this._ContractMaintenances;
			}
			set
			{
				this._ContractMaintenances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_SubProduct", Storage="_SubProducts", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<SubProduct> SubProducts
		{
			get
			{
				return this._SubProducts;
			}
			set
			{
				this._SubProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_SubProducts(SubProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_SubProducts(SubProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recalculation")]
	public partial class Recalculation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IndexIds;
		
		private bool _IsForUpliftRequired;
		
		private int _Status;
		
		private System.DateTime _Date;
		
		private int _UserId;
		
		private string _LogFilePath;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIndexIdsChanging(string value);
    partial void OnIndexIdsChanged();
    partial void OnIsForUpliftRequiredChanging(bool value);
    partial void OnIsForUpliftRequiredChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLogFilePathChanging(string value);
    partial void OnLogFilePathChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Recalculation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexIds", DbType="NVarChar(400)")]
		public string IndexIds
		{
			get
			{
				return this._IndexIds;
			}
			set
			{
				if ((this._IndexIds != value))
				{
					this.OnIndexIdsChanging(value);
					this.SendPropertyChanging();
					this._IndexIds = value;
					this.SendPropertyChanged("IndexIds");
					this.OnIndexIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForUpliftRequired", DbType="Bit NOT NULL")]
		public bool IsForUpliftRequired
		{
			get
			{
				return this._IsForUpliftRequired;
			}
			set
			{
				if ((this._IsForUpliftRequired != value))
				{
					this.OnIsForUpliftRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsForUpliftRequired = value;
					this.SendPropertyChanged("IsForUpliftRequired");
					this.OnIsForUpliftRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogFilePath", DbType="NVarChar(1000)")]
		public string LogFilePath
		{
			get
			{
				return this._LogFilePath;
			}
			set
			{
				if ((this._LogFilePath != value))
				{
					this.OnLogFilePathChanging(value);
					this.SendPropertyChanging();
					this._LogFilePath = value;
					this.SendPropertyChanged("LogFilePath");
					this.OnLogFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubProduct")]
	public partial class SubProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldSubProductID;
		
		private int _ProductID;
		
		private string _Version;
		
		private string _Activity;
		
		private System.Nullable<int> _DatabaseID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<ContractMaintenance> _ContractMaintenances;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldSubProductIDChanging(System.Nullable<int> value);
    partial void OnOldSubProductIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnActivityChanging(string value);
    partial void OnActivityChanged();
    partial void OnDatabaseIDChanging(System.Nullable<int> value);
    partial void OnDatabaseIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public SubProduct()
		{
			this._ContractMaintenances = new EntitySet<ContractMaintenance>(new Action<ContractMaintenance>(this.attach_ContractMaintenances), new Action<ContractMaintenance>(this.detach_ContractMaintenances));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSubProductID", DbType="Int")]
		public System.Nullable<int> OldSubProductID
		{
			get
			{
				return this._OldSubProductID;
			}
			set
			{
				if ((this._OldSubProductID != value))
				{
					this.OnOldSubProductIDChanging(value);
					this.SendPropertyChanging();
					this._OldSubProductID = value;
					this.SendPropertyChanged("OldSubProductID");
					this.OnOldSubProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(50)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="NVarChar(30)")]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int")]
		public System.Nullable<int> DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubProduct_ContractMaintenance", Storage="_ContractMaintenances", ThisKey="ID", OtherKey="SubProductID")]
		public EntitySet<ContractMaintenance> ContractMaintenances
		{
			get
			{
				return this._ContractMaintenances;
			}
			set
			{
				this._ContractMaintenances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_SubProduct", Storage="_Product", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.SubProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.SubProducts.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.SubProduct = this;
		}
		
		private void detach_ContractMaintenances(ContractMaintenance entity)
		{
			this.SendPropertyChanging();
			entity.SubProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCompanyMappings")]
	public partial class UserCompanyMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _CompanyID;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private bool _IsActive;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntityRef<OACompany> _OACompany;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public UserCompanyMapping()
		{
			this._OACompany = default(EntityRef<OACompany>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._OACompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OACompany_UserCompanyMapping", Storage="_OACompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public OACompany OACompany
		{
			get
			{
				return this._OACompany.Entity;
			}
			set
			{
				OACompany previousValue = this._OACompany.Entity;
				if (((previousValue != value) 
							|| (this._OACompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OACompany.Entity = null;
						previousValue.UserCompanyMappings.Remove(this);
					}
					this._OACompany.Entity = value;
					if ((value != null))
					{
						value.UserCompanyMappings.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("OACompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCompanyMapping", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserCompanyMappings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserCompanyMappings.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private string _EmailID;
		
		private string _UserType;
		
		private bool _IsActive;
		
		private bool _IsPasswordTemporary;
		
		private bool _CanExecuteReport;
		
		private System.Nullable<int> _DefaultCompany;
		
		private System.Nullable<System.DateTime> _LastLoginTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<Audit> _Audits;
		
		private EntitySet<UserCompanyMapping> _UserCompanyMappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsPasswordTemporaryChanging(bool value);
    partial void OnIsPasswordTemporaryChanged();
    partial void OnCanExecuteReportChanging(bool value);
    partial void OnCanExecuteReportChanged();
    partial void OnDefaultCompanyChanging(System.Nullable<int> value);
    partial void OnDefaultCompanyChanged();
    partial void OnLastLoginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public User()
		{
			this._Audits = new EntitySet<Audit>(new Action<Audit>(this.attach_Audits), new Action<Audit>(this.detach_Audits));
			this._UserCompanyMappings = new EntitySet<UserCompanyMapping>(new Action<UserCompanyMapping>(this.attach_UserCompanyMappings), new Action<UserCompanyMapping>(this.detach_UserCompanyMappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(100)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this.OnEmailIDChanging(value);
					this.SendPropertyChanging();
					this._EmailID = value;
					this.SendPropertyChanged("EmailID");
					this.OnEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(20)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPasswordTemporary", DbType="Bit NOT NULL")]
		public bool IsPasswordTemporary
		{
			get
			{
				return this._IsPasswordTemporary;
			}
			set
			{
				if ((this._IsPasswordTemporary != value))
				{
					this.OnIsPasswordTemporaryChanging(value);
					this.SendPropertyChanging();
					this._IsPasswordTemporary = value;
					this.SendPropertyChanged("IsPasswordTemporary");
					this.OnIsPasswordTemporaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanExecuteReport", DbType="Bit NOT NULL")]
		public bool CanExecuteReport
		{
			get
			{
				return this._CanExecuteReport;
			}
			set
			{
				if ((this._CanExecuteReport != value))
				{
					this.OnCanExecuteReportChanging(value);
					this.SendPropertyChanging();
					this._CanExecuteReport = value;
					this.SendPropertyChanged("CanExecuteReport");
					this.OnCanExecuteReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultCompany", DbType="Int")]
		public System.Nullable<int> DefaultCompany
		{
			get
			{
				return this._DefaultCompany;
			}
			set
			{
				if ((this._DefaultCompany != value))
				{
					this.OnDefaultCompanyChanging(value);
					this.SendPropertyChanging();
					this._DefaultCompany = value;
					this.SendPropertyChanged("DefaultCompany");
					this.OnDefaultCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginTime
		{
			get
			{
				return this._LastLoginTime;
			}
			set
			{
				if ((this._LastLoginTime != value))
				{
					this.OnLastLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginTime = value;
					this.SendPropertyChanged("LastLoginTime");
					this.OnLastLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Audit", Storage="_Audits", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Audit> Audits
		{
			get
			{
				return this._Audits;
			}
			set
			{
				this._Audits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCompanyMapping", Storage="_UserCompanyMappings", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserCompanyMapping> UserCompanyMappings
		{
			get
			{
				return this._UserCompanyMappings;
			}
			set
			{
				this._UserCompanyMappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Audits(Audit entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Audits(Audit entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserCompanyMappings(UserCompanyMapping entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserCompanyMappings(UserCompanyMapping entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
