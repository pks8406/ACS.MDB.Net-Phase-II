@model ACS.MDB.Net.App.Models.CustomerComment

@{
    ViewBag.Title = "MDB::Customer Comment";
}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div style="background: #F9F7FB">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)

        //hidden field
        @Html.HiddenFor(m => m.ID)
        @Html.HiddenFor(m => m.InvoiceCustomerId, new { @id = "txtCustomerId" })
        @Html.HiddenFor(m => m.CompanyId, new { @id = "txtCompanyId" })
        @Html.HiddenFor(m => m.InvoiceCustomerName, new { @id = "txtCustomerName" })
        @Html.HiddenFor(m => m.CompanyName, new { @id = "txtCompanyName" })

        <table style="width: 100%">
            <tr>
                <td></td>
            </tr>
            @if (Model.ID != 0)
            {
                <tr>

                    <td>
                        @Html.LabelFor(m => m.CompanyName)
                    </td>
                    <td>
                        <b>@Html.DisplayFor(m => m.CompanyName, new { style = "width:300px" })</b>
                    </td>
                </tr>
                <tr>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        @Html.LabelFor(m => m.CompanyName, new { @class = "mandatoryLabel" })
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x.CompanyId, new SelectList(Model.OAcompanyList, "ID", "Name", Model.CompanyId), "Select Company", new { @id = "ddlCompany", style = "width:300px;height:25px" })
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        @Html.ValidationMessageFor(model => model.CompanyId)
                    </td>
                </tr>
            }

            <tr>
                <td></td>
            </tr>
            <tr>
                <td></td>
            </tr>
            @if (Model.ID != 0)
            {
                <tr>
                    <td>
                        @Html.LabelFor(m => m.InvoiceCustomerName)
                    </td>
                    <td>
                        <b>@Html.DisplayFor(m => m.InvoiceCustomerName, new { style = "width:300px" })</b>
                    </td>
                </tr>
                <tr>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        @Html.LabelFor(model => model.InvoiceCustomerName, new { @class = "mandatoryLabel" })
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x.InvoiceCustomerId, new SelectList(Model.InvoiceCustomerList, "ID", "CustomerandOACustomerId", Model.InvoiceCustomerId), "Select Invoice Customer", new { @id = "ddlInvCustomer", style = "width:300px;height:25px" })
                    </td>
                </tr>

                <tr>
                    <td></td>
                    <td>
                        @Html.ValidationMessageFor(m => m.InvoiceCustomerId)
                    </td>
                </tr>
            }

            <tr>
                <td></td>
            </tr>
            <tr>
                <td style="vertical-align: middle">
                    @Html.LabelFor(m => m.Comment)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Comment, 4, 1, new { @id = "txtCustomerComment", @maxlength = "220", style = "width:290px; resize: none" })
                </td>
            </tr>

            <tr>
                <td></td>
                <td>
                    @Html.ValidationMessageFor(model => model.Comment)
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(m => m.Group, new { style = "width:200px" })
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.Group)
                </td>
            </tr>
            <tr>
                <td></td>
            </tr>
        </table>
    }
</div>

<script type="text/javascript">

    SetFocus('#ddlCompany');
    DisableInvalidKeyForControl('#txtCustomerComment');

    if ('@Model.ID' > 0) {
        SetFocus('#txtCustomerComment');
    }

    var selectedCustomerId = -1;
    var selectedCompanyId = -1;
    var selectedCustomerName = '';
    var selectedCompanyName = '';

    $("#ddlCompany").change(function () {
        //var selectedCustomerId = -1;
        selectedCompanyId = $(this).val();;
        selectedCompanyName = $(this).children('option').filter(':selected').text();
        $("#txtCompanyId").val(selectedCompanyId);
        $("#txtCompanyName").val(selectedCompanyName);

        if (selectedCompanyId != -1 && selectedCompanyId != 0) {

            var postData = { companyId: selectedCompanyId };
            //Get InvoiceCustomerList based on selected company id
            $.post("/Contract/GetInvoiceCustomerListByCompany", postData, function (response) {

                if (response != null) {
                    $("#ddlInvCustomer").empty();

                    if (response != '') {
                        AddOption("Select Invoice Customer", "-1", "#ddlInvCustomer");
                    }
                    else if (response == '') {
                        AddOption("No customer exists", "-1", "#ddlInvCustomer");
                    }
                    for (var i in response) {
                        AddOption(response[i].CustomerandOACustomerId, response[i].InvoiceCustomerId, "#ddlInvCustomer");
                    }

                    $("#txtCustomerId").val(-1);
                }
            });
        }
        else {
            $("#ddlInvCustomer").empty();
            selectedCompanyId = 0;
            selectedCustomerId = 0;
            //$("#ddlInvCustomer").val = 0;
            AddOption("Select Invoice Customer", "-1", "#ddlInvCustomer");
        }
    })

    $("#ddlInvCustomer").change(function () {
        selectedCustomerId = $(this).val();
        selectedCustomerName = $(this).children('option').filter(':selected').text();
        if (selectedCustomerId != -1 && selectedCustomerId != 0) {

            $("#txtCustomerId").val(selectedCustomerId);
            $("#txtCustomerName").val(selectedCustomerName);
        }
        //else {
        //    $("#ddlInvCustomer").empty();
        //    selectedCustomerId = 0;
        //    $("#ddlInvCustomer").val = 0;
        //    AddOption("Select Invoice Customer", "0");
        //}
    })

    //Disable Save button of pop up for viewer
    DisableSaveButton();
</script>